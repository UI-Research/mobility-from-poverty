---
title: "Historical Employment Metric Comparison"
author: "JP Walsh"
date: today
format:
  html:
    toc: true
    toc_float: true
    embed-resources: true
    code-fold: true
execute: 
  warning: false
editor_options: 
  chunk_output_type: console
---

This program compares the results for the employment metric updated by JP Walsh in 2023/24 with the results originally produced by Kevin Werner in 2022/23. These processes should be the same and as a result the final metrics should be comparable.

## House keeping

```{r}
library(tidyverse)
library(tidylog)
library(here)
library(assertr)
library(gt)

options(scipen = 999)
```

## Longitudinal Data        

Ready income metric. These results are from all households in the 1-year ACS survey.

```{r}
counties_old <- read_csv(here("data", "00_mobility-metrics_longitudinal.csv")) %>% 
  select(year, state, county, share_employed) %>% 
  filter(year == 2018)

counties_new <- read_csv(here("09_employment", "data", "final", "metrics_employment_county_all_longitudinal.csv")) %>% 
  select(year, state, county, share_employed_updt = share_employed) %>% 
  filter(year == 2018)
```

Summarize the statistics. Remove NAs from the old data set where we have added suppression so that the comparison groups are equal.

The summary tables below show that these results are near identical but for a slight difference in the 3rd Quartile (likely due to rounding differences).

```{r}
counties_new_suppressed <- counties_new %>% 
  mutate(fips = paste0(state, county)) %>% 
  filter(is.na(share_employed_updt)) %>% 
  select(fips) %>% 
  pull()

counties_old %>%
  mutate(fips = paste0(state, county)) %>% 
  filter(!fips %in% counties_new_suppressed) %>% 
  summary()

counties_new %>% 
  summary()
```

Join metrics and compare the results. There are minuscule differences between a selection of counties likely due to rounding differences.

```{r}

counties_new %>% 
  left_join(counties_old, by = c("year", "state", "county")) %>% 
  filter(!is.na(share_employed_updt)) %>% 
  mutate(diff_employed = round((share_employed_updt - share_employed), digits = 3)) %>% 
  reactable::reactable()

```


## Race Ethnicity Data

Ready income metric. These results are from households by race/ethnicity in the 5-year ACS survey.

```{r}

counties_old_race <- read_csv(here("data", "01_mobility-metrics_race-ethnicity_longitudinal.csv")) %>% 
  select(year, state, county, share_employed, subgroup) %>% 
  filter(year %in% c(2018, 2021), subgroup != "All")

counties_new_race <- read_csv(here("09_employment", "data", "final", "metrics_employment_county_race-ethnicity_longitudinal.csv")) %>% 
  select(year, state, county, share_employed_updt = share_employed, subgroup) %>% 
  filter(year %in% c(2018, 2021), subgroup != "All")
  
```

Summarize the statistics. Remove NAs from the old data set where we have added suppression so that the comparison groups are equal.

```{r}
counties_new_race_suppressed <- counties_new_race %>% 
  mutate(supp = paste0(subgroup, year, state, county)) %>% 
  filter(is.na(share_employed_updt)) %>% 
  select(supp) %>% 
  pull()
```

Summary of 2018 data. The summary statistics match. 
```{r}
counties_old_race %>%
  mutate(supp = paste0(subgroup, year, state, county)) %>% 
  filter(!supp %in% counties_new_race_suppressed, year == 2018) %>% 
  summary()

counties_new_race %>% 
  filter(year == 2018) %>% 
  summary()
```

Summary of 2021 data. The summary statistics match. 
```{r}
counties_old_race %>%
  mutate(supp = paste0(subgroup, year, state, county)) %>% 
  filter(!supp %in% counties_new_race_suppressed, year == 2021) %>% 
  summary()

counties_new_race %>% 
  filter(year == 2021) %>% 
  summary()
```

Join metrics and compare the results for subgroups and all in the 5-year data. 

For 2018.
```{r}
counties_new_race %>% 
  left_join(counties_old_race, by = c("year", "state", "county", "subgroup")) %>% 
  filter(!is.na(share_employed_updt), year == 2018) %>% 
  mutate(diff_employed = round((share_employed_updt - share_employed), digits = 3)) %>% 
  reactable::reactable(searchable = TRUE)
```

The largest difference is just under 3 percentage points. However, on average the difference between the two results is less than a percent. 
```{r}
counties_new_race %>% 
  left_join(counties_old_race, by = c("year", "state", "county", "subgroup")) %>% 
  filter(!is.na(share_employed_updt), year == 2018) %>% 
  mutate(diff_employed = round((share_employed_updt - share_employed), digits = 3)) %>% 
  select(diff_employed) %>% 
  summary()
```


For 2021.
```{r}
counties_new_race %>% 
  left_join(counties_old_race, by = c("year", "state", "county", "subgroup")) %>% 
  filter(!is.na(share_employed_updt), year == 2021) %>% 
  mutate(diff_employed = round((share_employed_updt - share_employed), digits = 3)) %>% 
  reactable::reactable(searchable = TRUE)
```

The largest difference is just under 4 percentage points. However, on average the difference between the two results is significantly less than a percent. 
```{r}
counties_new_race %>% 
  left_join(counties_old_race, by = c("year", "state", "county", "subgroup")) %>% 
  filter(!is.na(share_employed_updt), year == 2021) %>% 
  mutate(diff_employed = round((share_employed_updt - share_employed), digits = 3)) %>% 
  select(diff_employed) %>% 
  summary()
```
