


The rest of this file is organized as follows:

1. Background
2. Manually download NIBRS offense data from openICPSR
3. Read in and clean NIBRS offense data
4. Join offense data onto county-agency weights
5. Aggregate agency-level offenses to the county level
6. Calculate rates of reported property crimes per 100,000 people and reported violent crimes per 100,000 people
7. Construct quality indicators
8. Validation
9. Save and write out data



## 1. Background
This section provides background information for the data used to create this metric.

The data for this metric come from the FBI's [National Incident-Based Reporting System (NIBRS)](https://bjs.ojp.gov/national-incident-based-reporting-system-nibrs). This is the national standard for law enforcement crime data reporting in the United States. Processing the raw NIBRS data would take a lot of work.

Instead of downloading the raw data directly, we use criminologist Jacob Kaplan's Concatenated Files: National Incident-Based Reporting System (NIBRS) Data, 1991-2022. We use the latest version, Version 9. These data are available for download via [openICPSR](https://www.openicpsr.org/openicpsr/project/118281/version/V9/view).

The NIBRS data are separated into segments. For this metric, we use the following segment:

* Offense segment

Note that data for a single year may change with each version release (e.g., 2021 NIBRS data included in Version 8 may not match 2021 NIBRS data released in Version 9). I think this is because as more agencies switch from reporting through UCR to NIBRS, they also provide historical information. Future updates should make sure to run past years with the most recent version as well.

To learn more about NIBRS data, consult Jacob Kaplan's book titled [National Incident-Based Reporting System (NIBRS) Data: A Practitioner's Guide](https://nibrsbook.com/). For these metrics, the most important thing to know about these data is that most police agencies do not report NIBRS data prior to 2021. In 2019, only 8,500 out of approximately 18,000 police agencies in the United States (covering about 45% of the US population) reported NIBRS data. Instead, agencies primarily reported [UCR data](https://ucrbook.com/) for 2020 and before. However, the FBI has moved entirely to NIBRS data starting in 2021 and no longer collects UCR data, which is why we use NIBRS data instead ([source](https://nibrsbook.com/overview-of-the-data.html)). 

We do not want to use NIBRS data for some years and UCR data for others. However, because of lack of reporting, **there are a lot of missing values prior to 2021 for NIBRS data**. Future updates of the safety metrics may want to include historical NIBRS data back to 2014 and should keep this in mind.


## 2. Manually download NIBRS offense data from openICPSR
This section describes the steps for manually downloading the NIBRS offense segment.

Accessing these data requires an ICPSR account. Therefore, we do not directly download the data in the code. Manually downloading these data is a five-step process, but you will only need to do each of these steps once for the creation of this metric:

  1. Create an ICPSR account [here](https://www.icpsr.umich.edu/cgi-bin/newacct).
  2. Navigate to Jacob Kaplan's project page for his NIBRS Concatenated Files [here](https://www.openicpsr.org/openicpsr/project/118281/version/V9/view).
  3. Select `nibrs_1991_2022_offense_segment_rds.zip`
      + Select `Download this file`
      + Select `I Agree` on the `Terms of Use`
      + Move the zip file from your `Downloads` folder to the `mobility-from-poverty\07_safety\data` directory after you have cloned the repository for this project from GitHub.


## 3. Read in and clean NIBRS offense data
This section extracts the necessary files from the zip file downloaded in the previous step and reads the files into the R environment. The zip file contains data files for 1991-2022. However, we only want 2021-2022. Note that future updates of this metric may want to include historical NIBRS data back to 2014 and should update this section to include all years.

```{r}
nibrs <- readRDS(here::here("07_safety", "data", "nibrs_offense_segment_2020_2023.rds"))

nibrs_2023 <- nibrs |>
  filter(year==2023)

arrow::write_parquet(
  x = nibrs_2023,
  sink = here::here("07_safety", "data", "nibrs_2023.parquet")
)

nibrs_2023 <- arrow::read_parquet(here::here("07_safety", "data", "nibrs_2023.parquet"))
```


### 3.1 Extract files for 2021-2022 from the zip file
Extract each file for the years 2021-2022 from the `offense` segment.
```{r, eval=FALSE}
# Specify range of years
start_year <- 2021
end_year <- 2022

# Create a vector of years between start_year and end_year
my_years <- seq(start_year, end_year)

# Extract years 2021-2022 for the offense segment
for (year in my_years) {
  unzip(
  zipfile = here::here("07_safety", "reported-crime", "data", "nibrs_1991_2022_offense_segment_rds.zip"),
  files = paste0("nibrs_offense_segment_", year, ".rds"),
  exdir = here::here("07_safety", "reported-crime", "data", "nibrs_1991_2022_offense_segment_rds")
)
}

# Clean up environment
rm(start_year, end_year, my_years)

```

### 3.2 Prepare data to be read and cleaned
Note that the offense segment files are very large. They were too large to read in and append in one step (at least with the code that I was using) for years 2014-2022. Because future updates may want to include historical data back to 2014, I create a function that reads in the offense segment for each year and cleans it. This makes each file smaller and more manageable, and we are then able to append those smaller files for each year.

#### 3.2a Identify violent crimes and property crimes
Each observation in the offense segment is a single offense/crime, and includes a variable for the offense code. Offense codes are categorized into crimes against property, crimes against persons (violent crimes), or crimes against society. We are interested in property crimes and violent crimes. Using , we create a data frame of all offense and crime type combinations. We then use this data to identify property crimes and violent crimes in our data. 

Create a data frame that lists all offense, crime type, and group combinations using Section 2.3 of the [2021.1 National Incident-Based Reporting System User Manual](https://bjs.ojp.gov/sites/g/files/xyckuh236/files/sarble/data_common/nibrs-user-manual-2021-1041521.pdf). Note that the full frame includes crimes against society, but these are not used in our analysis.

```{r}
nibrs_2023 |>
  select(ucr_offense_code) |>
  group_by(ucr_offense_code) |>
  count()
  
```




### 3.2 Write function to read in NIBRS offense data for each year
```{r, eval=FALSE}


clean_offense_data <- function(year) {
  # Construct the file name based on year
  file_name <- here::here("07_safety", "reported-crime", "data", "nibrs_1991_2022_offense_segment_rds", paste0("nibrs_offense_segment_", year, ".rds"))
  
  # Check if the file exists
  if (!file.exists(file_name)) {
    stop(paste("Data file for year", year, "not found."))
  }
  
  # Read the data file
  readRDS(file_name) |>
    # Limit to variables of interest
    select(ori, # unique agency identifier
           ucr_offense_code
    ) |>
    # Create indicator variables for property 
    mutate(
      property = ifelse(ucr_offense_code %in% property, 1, 0),
      violent = ifelse(ucr_offense_code %in% violent, 1, 0)
    ) |>
    # Aggregate property and violent crimes by agency
    group_by(ori) |>
    summarize(all = n(),
              violent = sum(violent),
              property = sum(property)) |>
    ungroup() |>
    # Create variable for year
    mutate(year = as.character(year))
}

```

### 3.3 Read in (and clean) NIBRS offense data
```{r, eval=FALSE}
# Note that future updates may want to include historical data and should un-comment the lines for 2020 and before
offenses_2022 <- clean_offense_data(year=2022)
offenses_2021 <- clean_offense_data(year=2021)
# offenses_2020 <- clean_offense_data(year=2020)
# offenses_2019 <- clean_offense_data(year=2019)
# offenses_2018 <- clean_offense_data(year=2018)
# offenses_2017 <- clean_offense_data(year=2017)
# offenses_2016 <- clean_offense_data(year=2016)
# offenses_2015 <- clean_offense_data(year=2015)
# offenses_2014 <- clean_offense_data(year=2014)

```

### 3.4 Append NIBRS offense data for all years
```{r, eval=FALSE}
# Note that future updates may want to include historical data and should use the lines that are currently commented out
offenses_agency <- bind_rows(
  offenses_2021, offenses_2022
)

rm(codes, violent, property, clean_offense_data,
   offenses_2021, offenses_2022)

# offenses <- bind_rows(
#   offenses_2014, offenses_2015, offenses_2016, offenses_2017, offenses_2018,
#   offenses_2019, offenses_2020, offenses_2021, offenses_2022
# )
# 
# rm(codes, violent, property, clean_offense_data,
#    offenses_2014, offenses_2015, offenses_2016, offenses_2017, offenses_2018, 
#    offenses_2019, offenses_2020, offenses_2021, offenses_2022)

```

Note that because the process of extracting and reading in these files takes so long, I write out the appended all arrests data here. Then I read this file back in when returning to this program so that I don't have to constantly re-run the previous steps.
```{r, eval=FALSE}
# Write out agency-level offense data
write_csv(offenses_agency, file = here::here("07_safety", "reported-crime", "data", "offenses_21_22.csv"))
```

```{r}
# Read agency-level offense data back in for ease of future use
#offenses_agency <- read.csv(here::here("07_safety", "reported-crime", "data", "offenses_21_22.csv"))

offenses_agency <- nibrs_2023_clean

```


## 4. Join offense data onto agency-county weights
Our data are currently long by year/agency. However, we want to know the arrest counts at the county level, not the agency level. In the `01_agency_geo_county.Rmd` program, we constructed a file that linked reporting agencies to counties. For agencies that served more than one county, the file includes a weight to assign proportions of agency-level counts to each county based on population.

First load the universe of agencies linked to counties with weights for each county. This file was created in `01_agency_geo_county.Rmd`.
```{r}
agency_weights <- read_csv(here::here("07_safety", "data", "all_agency_county.csv")) |>
  mutate(year = as.character(year))

```

Join offenses onto the full universe of agencies and multiply counts by the agency-county weight.
```{r}
offenses_agency_county <- left_join(
  x = agency_weights,
  y = offenses_agency,
  by = c("ori", "year")
) |>
  mutate(
    # Multiply counts by agency-county weights
    across(all:property, ~.x * weight),
    # Create variables for reporting
    reporting_all = ifelse(is.na(all), 0, 1),
    reporting_violent = ifelse(is.na(violent), 0, 1),
    reporting_property = ifelse(is.na(property), 0, 1)
  )

```

A very small percentage of crime is reported by special agencies (agency_type == 5) 
```{r}
offenses_agency_county |>
  group_by(agency_type) |>
  summarize(
    n = n(),
    n_rpt = sum(!is.na(all)),
    crime = sum(all, na.rm = TRUE)
  ) |>
  ungroup() |>
  mutate(
    pct = crime / sum(crime),
    pct_report = n_rpt / n
  )
  
```


## 5. Aggregate agency-level offenses to the county-level





### 6.1 Load demographic information
First load the demographic information for each county and for each year 2014-2022. This file was created using 5 year ACS data in `01_agency_geo_county.Rmd`.
```{r}
county_demo <- read_csv(here::here("07_safety", "data", "all_county_demo.csv")) |>
  mutate(year = as.character(year))

```

### 6.2 Join county-level offense data onto county-level population data
```{r}
offense_county_demo <- left_join(
  x = county_demo |>
    select(c(year, GEOID, total_people)),
  y = offenses_county,
  by = c("year", "GEOID")
)
  
```


















