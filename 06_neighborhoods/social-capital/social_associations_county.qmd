---
title: "Number of membership associations per 10,000 people — County"
author: "Manuel Alcalá Kovalski"
date: now
format:
  html:
    self-contained: true
    toc: true
    css: ../../06_neighborhoods/www/web_report.css
editor_options: 
  chunk_output_type: console
execute:
  warning: false
  message: false
---

## Overview


- (1) import and clean the data file

- (2) download population data from ACS (this is the denominator)

- (3) merge the data file(s) & construct the ratio (Numerator/Denominator)

- (4) final file cleaning and export to .csv file

```{r}
#| label: setup
library(tidyverse)
library(here)
library(sf)
library(censusapi)
library(tigris)
options(tigris_use_cache = TRUE)
```

## Import and clean the CBP data file

This means: 
a) fill in fips missing zeroes,\
b) isolate to only the following NAICS,\
c) collapse & keep only relevant variables, and\
d) add the year of these data.


We pull our data from `library(censusapi)`. 

**Note:** This will require a [Census API key](https://api.census.gov/data/key_signup.html). Add the key to `census_api_key-template.R` and then delete then delete "template". It is sourced below

```{r}
#| label: source-census-api-key
source(here::here("06_neighborhoods", "R", "census_api_key.R"))
```


```{r}
#| label: get-social-organization-data

years <- c(2020, 2021)
cbp_county <-
  map(
    years,
    ~ getCensus(
      name = "cbp",
      vintage = .x,
      vars = c("EMP", "ESTAB", "NAICS2017"),
      region = "county:*"
    ) %>%
      as_tibble() %>%
      mutate(year = .x)
  ) %>%
  list_rbind()

head(cbp_county)
```

Below are the codes/associations included in the County Health Rankings metric. See [here](https://www.countyhealthrankings.org/explore-health-rankings/county-health-rankings-model/health-factors/social-economic-factors/family-and-social-support/social-associations?year=2022) for more

Codes: 813410, 713950, 713910, 713940, 711211, 813110, 813940, 813930, 813910, and 813920

```{r}
#| label: import-and-clean
naics_codes_to_keep <- c("813410", "713950", "713910", "713940", "711211", "813110", "813940", "813930", "813910", "813920")

cbp_county <-
  cbp_county %>%
  filter(NAICS2017 %in% naics_codes_to_keep) %>%
  select(year, state, county, orgs = ESTAB) %>%
  drop_na(orgs) %>%
  summarise(count_orgs = sum(orgs), .by = c("year", "state", "county"))
```


## Download population data from ACS (denominator)

```{r}
pop <- read_csv(here("geographic-crosswalks/data/county-populations.csv")) %>%
  filter(year %in% years) %>%
  select(year, state, county, population)
```

## Merge the data file(s) & construct the ratio (Numerator/Denominator)

```{r}
merged_sa <-
  left_join(pop, cbp_county, by = c("year", "state", "county")) %>%
  select(year, state, county, count_orgs, population)
```

## Create the social associations per 10,000 people metric

```{r}
#| label: create-metric
merged_sa <-
  merged_sa %>%
  mutate(
    pop_ratio = population / 1e4,
    count_membership_associations_per_10k = round(count_orgs / pop_ratio, digits = 1)
  )
```


## Final file cleaning and export to .csv file

Data quality flag (we have no issues with this metric except overall missings) This is so that the missing values transfer as missing values

```{r}
merged_sa <-
  merged_sa %>%
  mutate(
    count_membership_associations_per_10k_quality =
      if_else(is.na(count_membership_associations_per_10k),
        as.numeric(NA),
        1
      )
  ) %>%
  # keep what we need
  select(
    year, state, county,
    count_membership_associations_per_10k,
    count_membership_associations_per_10k_quality
  ) %>%
  arrange(
    year, state, county,
    count_membership_associations_per_10k,
    count_membership_associations_per_10k_quality
  )
```

**Check:** Are there exactly 315 missing values?

```{r}
stopifnot(
  sum(is.na(merged_sa$count_membership_associations_per_10k)) == 315
)
```

## Save the final file

```{r}
merged_sa %>%
  arrange(year, state, county) %>%
  write_csv(here("06_neighborhoods/social-capital/final/social_associations_all_county.csv"))

merged_sa %>%
  filter(year == 2021) %>%
  select(-year) %>%
  arrange(state, county) %>%
  write_csv(here("06_neighborhoods/social-capital/final/social_associations_2021_county.csv"))
```
