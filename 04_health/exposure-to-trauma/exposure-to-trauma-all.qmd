---
title: "Exposure to Trauma"
author: "Vincent Pancini"
date: "`r format(Sys.time(), '%B %d, %Y %H:%M')`"
output:
  html_document:
    number_sections: false
    self_contained: TRUE
    code_folding: show
    toc: TRUE
    toc_float: TRUE
    editor_options:
      chunk_output_type: console
---

```{=html}
<style>
@import url('https://fonts.googleapis.com/css?family=Lato&display=swap');
</style>
```
<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato" />

```{r rmarkdown-setup, echo = FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
```

```{r setup}
options(scipen = 999)

library(urbnthemes)
library(tidyverse)
library(tidylog)
library(testthat)

set_urbn_defaults(style = "print")

```

This metric is a county-level estimate of exposure to trauma, defined as the number of deaths due to injury per 100,000 population.

The rest of this file is organized as follows:

1. Background 
2. Manually download mortality data from CDC WONDER 
3. Read in and clean mortality data 
4. Join mortality data onto universe of Urban counties 
5. Validation 
6. Add data quality flags 
7. Save the data

# 0. Background and Changes

## 0.1 Changes from previous round of metric updates
+ Adds newest years of data (2021, 2022, and 2023).
+ The data used in the creation of this metric come from CDC WONDER's Underlying Cause of Death data. Past rounds of updates (data years 2014-2020) used the Bridged-Race Categories version of the data (available for years 1999-2020). Those data were discontinued, and after 2020, only the Single-Race Categories version of the data are available (for years 2018-2023). Past years reported age-adjusted mortality rates, but the Single-race Categories only allow for crude mortality rates. So, past years have been updated to report crude rates instead of age-adjusted rates.
+ We've added four subgroups for race/ethnicity for data years 2021 and beyond: Non-Hispanic White, Non-Hispanic Black, Hispanic, and Non-Hispanic Other.
+ Last update, we compared our results to those produced by County Health Rankings and Roadmaps. We cannot do that this year because they use the restricted-use mortality data instead of the publicly available data from CDC WONDER.

## 0.2 Background

This section provides background for the data and considerations used to create this metric.

The data for this metric are national mortality and population data produced by the National Center for Health Statistics (NCHS) at the Centers for Disease Control and Prevention (CDC). Mortality information is collected by state registries and provided to the National Vital Statistics System. Data are based on death certificates for U.S. residents, and each death certificate contains a single underlying cause of death. Causes of death for 1999 and beyond are classified in accordance with the International Classification of Disease Tenth Revision (ICD-10). We use the following ICD-10 codes to identify injury deaths (note that County Health Rankings uses the same list of ICD-10 codes for their numerator of this metric ([source](https://www.countyhealthrankings.org/health-data/health-factors/social-economic-factors/community-safety/injury-deaths?year=2024): 

-   \*U01 (Terrorism - Assault (homicide) )
-   \*U02 (Sequelae of terrorism)
-   \*U03 (Terrorism Intentional (Suicide))
-   V01-V99 (Transport accidents)
-   W00-X59 (Other external causes of accidental injury)
-   X60-X84 (Intentional self-harm)
-   X85-Y09 (Assault)
-   Y10-Y34 (Event of undetermined intent)
-   Y35-Y36 (Legal intervention and operations of war)
-   Y85 (Sequelae of transport accidents)
-   Y86 (Sequelae of other accidents)
-   Y87 (Sequelae of intentional self-harm, assault and events of undetermined intent)
-   Y89 (Sequelae of other external causes)

The mortality micro-data files are restricted and require research-proposal review and approval by the [National Center for Health Statistics](https://www.cdc.gov/nchs/nvss/nvss-restricted-data.htm). Therefore we use the mortality data made publicly available through [CDC WONDER](https://wonder.cdc.gov/Deaths-by-Underlying-Cause.html), an online system that makes CDC data available to the public.

To protect personal privacy and meet confidentiality constraints, CDC WONDER applies the following suppression rules to the raw NCHS mortality data before making them publicly available:

* Rates are suppressed for data representing zero to nine (0-9) deaths. Corresponding denominator population figures are also suppressed when the population represents fewer than 10 persons. 
* Rates are marked as "unreliable" when the death count is less than 20. 
* Rates are marked as "not applicable" when the population denominator figure is unavailable, such as persons of "not stated" or unknown age or Hispanic origin.

There are two options for these mortality data on CDC WONDER:
1. 2018-2023: Underlying Cause of Death by Single-Race Categories 
2. 1999-2020: Underlying Cause of Death by Bridged-Race Categories

### 0.2a Bridged-Race vs Single-Race
For 1979-2002, all 50 States and the District of Columbia collected race data on the death certificates using four single-race categories (American Indian or Alaska Native, Asian or Pacific Islander, Black, and White) in accordance with the 1977 OMB standards, allowing only a single race to be reported. Beginning with the 2003 data year, some States began collecting race data in accordance with the 1997 OMB standards, allowing one or more of five race categories to be reported. In order to provide uniformity and comparability of mortality data during the transition from the single-race format to the multiple-race format, NCHS is "bridging" the race responses of those for whom more than one race is reported (multiple race) to one of the single-race categories. The bridging procedure is similar to the procedure used to bridge multiple-race population estimates. Multiple-race decedents are imputed to a single race (White, Black, American Indian or Alaska Native, or Asian or Pacific Islander) according to their combination of races, Hispanic origin, sex, and age indicated on the death certificate ([source](https://wonder.cdc.gov/wonder/help/mcd.html)).

The 2011-2020 population estimates are postcensal estimates of the July 1 resident population. The release of postcensal bridged-race population estimates ceased with the release of the Vintage 2020 estimates. Therefore, mortality rates are only available through CDC WONDER by Single-Race Categories for years 2021 and beyond. We include subgroups by race/ethnicity for 2021 and beyond, but do not include subgroups for 2020 and prior years because the race categories are not comparable to those for 2021 and beyond.


### 0.2b Crude Rates vs Age-Adjusted Rates
Age-adjusted death rates are weighted averages of the age-specific death rates, where the weights represent a fixed population by age. They are used to compare relative mortality risk among groups and over time. An age-adjusted rate represents the rate that would have existed had the age-specific rates of the particular year prevailed in a population whose age distribution was the same as that of the fixed population. Age adjustment "removes" the effects of age from crude rates which allows for meaningful comparisons across populations with different age distributions. Age-adjusted rates should be viewed as relative indexes rather than as direct or actual measures of mortality risk.

Crude rates are helpful in determining the need for services for a given population, relative to another population, regardless of size. Crude rates are influenced by the underlying age distribution of the state's population. Even if two states have the same age-adjusted rates, the state with the relatively older population (as demonstrated by having a higher median age) will have higher crude rates because incidence or death rates for most cancers increase with increasing age.

Age-adjusted rates are not available at the county level for analysis of mortality by Single-Race categories because the populations are weighted to the 10-year age groups, and county level populations estimates are not available for the "<1 year" and "1-4 years" age categories. Even if we exclude these age categories, CDC WONDER will not produce age-adjusted rates with the Single-Race data. 

In past rounds of metric updates, with data years 2020 and prior, we reported age-adjusted mortality rates. Because age-adjusted rates are no longer available for data years 2021 and beyond, we have changed data years 2020 and prior to report crude rates as well instead of age-adjusted rates.

## 0.3 Considerations for future metric updates
+ Other subgroups available for construction through CDC WONDER include age groups (ten-year age groups, five-year age groups, and single-year age groups), sex, and education. The next round of updates may want to consider including additional subgroups, but will have to consider data suppression issues for any subgroup.
+ Rather than selecting injury deaths from the list of ICD-10 codes, CDC WONDER includes a section that allows users to specify deaths by "Injury Intent and Mechanism." Future updates may want to consider relying on this functionality, or at least comparing it to the ICD-10 codes that we've specified.


# 2. Manually download mortality data from CDC WONDER

This section explains the manual download process to create data extracts for these data from CDC WONDER.

There is an API available for CDC WONDER data. However, only national data are available for query by the API. Queries for mortality statistics from the National Vital Statistics System cannot limit or group results by any location field such as county. Therefore, we must manually download the data.

For each year of data accessed, we pool the most recent five years (consistent with County Health Rankings). E.g., for 2020, we pool data from 2016, 2017, 2018, 2019, and 2020. For each year, the user will need to repeat the steps with the correct five-year pool (e.g., for 2019 data, the user should select 2015, 2016, 2017, 2018, and 2019). This is explained in more detail in the next section.

### 2.1 Manually download Underlying Cause of Death by Bridged-Race Categories (2014-2020)
#### 2.1a Navigate to extract page

1.  Navigate to the Mortality Data homepage on CDC WONDER [here](https://wonder.cdc.gov/Deaths-by-Underlying-Cause.html).

2.  Select [1999-2020: Underlying Cause of Death by Bridged-Race Categories](https://wonder.cdc.gov/ucd-icd10.html)

3.  Select "I Agree" at the bottom of the page.

#### 2.1b Create extracts for each year 2014-2020

Create your extract for each year according to the specifications below. Note that the specific extract created by these specifications only creates the data file for 2020. You will need to modify and re-submit the query 6 times to get data files for 2014-2019. Instructions for how to do so are explained after the 2020 extract specifications.

1.  Organize table layout:
  + Group Results By: County
  + Measures: Deaths, Population, Crude Rate, 95% Confidence Interval (Crude Rate), Standard Error (Crude Rate), Age Adjusted Rate, 95% Confidence Interval (Age Adjusted Rate), Standard Error (Age Adjusted Rate)
  + Title: `injury_deaths_all_YYYY` where `YYYY` represents the most recent year in the five-year pool (e.g., if the pool includes years 2016, 2017, 2018, 2019, and 2020, name the file `injury_deaths_all_2020`)

2.  Select location:
  + States
  + States: *All* (The United States)
  + 2013 Urbanization: All Categories

3.  Select demographics:
  + Ten-Year Age Groups: All Ages
  + Gender: All Genders
  + Hispanic Origin: All Origins
  + Race: All Races

4.  Select year and month:
  + Year/Month: 2016, 2017, 2018, 2019, 2020 (select all at once)

5.  Select weekday, autopsy and place of death:
  + Weekday: All Weekdays
  + Autopsy: All Values
  + Place of Death: All Places

6.  Select cause of death:
  + ICD-10 Codes
  + ICD-10 Codes:
    -   \*U01 (Terrorism - Assault (homicide) )
    -   \*U02 (Sequelae of terrorism)
    -   \*U03 (Terrorism Intentional (Suicide))
    -   V01-V99 (Transport accidents)
    -   W00-X59 (Other external causes of accidental injury)
    -   X60-X84 (Intentional self-harm)
    -   X85-Y09 (Assault)
    -   Y10-Y34 (Event of undetermined intent)
    -   Y35-Y36 (Legal intervention and operations of war)
    -   Y85 (Sequelae of transport accidents)
    -   Y86 (Sequelae of other accidents)
    -   Y87 (Sequelae of intentional self-harm, assault and events of undetermined intent)
    -   Y89 (Sequelae of other external causes)

7.  Other options:
  + Show Totals
  + Show Zero Values
  + Show Suppressed Values
  + Precision: 1 decimal places
  + Data Access Timeout: 10 minutes

After creating the extract to the above specifications:
-   Select `Send` at the bottom of the page to submit the extract.

-   Select `Export` at the top right of the `Results` page. This will automatically download a `.txt` file titled `injury_deaths_all_YYYY.txt` to your Downloads folder

-   Move the `.txt` file from your Downloads folder to the `mobility-from-poverty\04_health\exposure-to-trauma\data\bridged-race` directory.

Note that to recreate this metric for all years, the user will need to submit the extract 7 total times. The only thing that changes with each submit is the combination of years chosen. Each data year includes the current year and the previous four years to create a five-year pool. After exporting your resulting `.txt` file for the first extract, navigate back to the `Request Form` by clicking the `Request Form` tab on the top left of the screen. The only thing you need to change is the combination of years under `Year/Month` in the `4. Select year and month:` section. Select:

* 2016, 2017, 2018, 2019, and 2020 and then click `Send` at the bottom of the screen to create the 2020 data file
* 2015, 2016, 2017, 2018, and 2019 and then click `Send` at the bottom of the screen to create the 2019 data file
* 2014, 2015, 2016, 2017, and 2018 and then click `Send` at the bottom of the screen to create the 2018 data file 
* 2013, 2014, 2015, 2016, and 2017 and then click `Send` at the bottom of the screen to create the 2017 data file
* 2012, 2013, 2014, 2015, and 2016 and then click `Send` at the bottom of the screen to create the 2016 data file
* 2011, 2012, 2013, 2014, and 2015 and then click `Send` at the bottom of the screen to create the 2015 data file
* 2010, 2011, 2012, 2013, and 2014 and then click `Send` at the bottom of the screen to create the 2014 data file


### 2.2 Manually download Underlying Cause of Death by Single-Race Categories (2021-2023)
#### 2.2a Navigate to extract page

1.  Navigate to the Mortality Data homepage on CDC WONDER [here](https://wonder.cdc.gov/Deaths-by-Underlying-Cause.html).

2.  Select [2018-2023: Underlying Cause of Death by Single-Race Categories](https://wonder.cdc.gov/ucd-icd10-expanded.html)

3.  Select "I Agree" at the bottom of the page.

#### 2.2b Create extracts for each year 2021-2023

Create your extract for each year according to the specifications below. Note that the specific extract created by these specifications only creates the data file for 2023. You will need to modify and re-submit the query 2 times to get data files for 2021-2022. Instructions for how to do so are explained after the 2023 extract specifications.

1.  Organize table layout:
  + Group Results By: County
  + Measures: Deaths, Population, Crude Rate, 95% Confidence Interval (Crude Rate), Standard Error (Crude Rate)
  + Title: `injury_deaths_all_YYYY` where `YYYY` represents the most recent year in the five-year pool (e.g., if the pool includes years 2019, 2020, 2021, 2022, and 2023 name the file `injury_deaths_all_2023`)

2.  Select location:
  + States
  + States: *All* (The United States)
  + 2013 Urbanization: All Categories

3.  Select demographics:
  + Ten-Year Age Groups: All Ages
  + Gender: All Genders
  + Hispanic Origin: All Origins
  + Single Race 6: All Races

4.  Select year and month:
  + Year/Month: 2019, 2020, 2021, 2022, 2023 (select all at once)

5.  Select weekday, autopsy and place of death:
  + Weekday: All Weekdays
  + Autopsy: All Values
  + Place of Death: All Places

6.  Select cause of death:
  + ICD-10 Codes
  + ICD-10 Codes:
    -   \*U01 (Terrorism - Assault (homicide) )
    -   \*U02 (Sequelae of terrorism)
    -   \*U03 (Terrorism Intentional (Suicide))
    -   V01-V99 (Transport accidents)
    -   W00-X59 (Other external causes of accidental injury)
    -   X60-X84 (Intentional self-harm)
    -   X85-Y09 (Assault)
    -   Y10-Y34 (Event of undetermined intent)
    -   Y35-Y36 (Legal intervention and operations of war)
    -   Y85 (Sequelae of transport accidents)
    -   Y86 (Sequelae of other accidents)
    -   Y87 (Sequelae of intentional self-harm, assault and events of undetermined intent)
    -   Y89 (Sequelae of other external causes)

7.  Other options:
  + Show Totals
  + Show Zero Values
  + Show Suppressed Values
  + Precision: 1 decimal places
  + Data Access Timeout: 10 minutes

After creating the extract to the above specifications:
-   Select `Send` at the bottom of the page to submit the extract.

-   Select `Export` at the top right of the `Results` page. This will automatically download a `.txt` file titled `injury_deaths_all_YYYY.txt` to your Downloads folder.

-   Move the `.txt` file from your Downloads folder to the `mobility-from-poverty\04_health\exposure-to-trauma\data\single-race\all` directory.

Note that to recreate this metric for all years, the user will need to submit the extract 3 total times. The only thing that changes with each submit is the combination of years chosen. Each data year includes the current year and the previous four years to create a five-year pool. After exporting your resulting `.txt` file for the first extract, navigate back to the `Request Form` by clicking the `Request Form` tab on the top left of the screen. The only thing you need to change is the combination of years under `Year/Month` in the `4. Select year and month:` section. Select:

* 2018, 2019, 2020, 2021, and 2022 and then click `Send` at the bottom of the screen to create the 2022 data file
* 2018, 2019, 2020, and 2021 and then click `Send` at the bottom of the screen to create the 2021 data file
  + Note that the Single-Race Categories data are only available starting in 2018, so for 2021 we can only get a four-year pool of data. This is the only year that does not include a five-year pool of data.

#### 2.2c Create extracts for each year 2021-2023 - race/ethnicity subgroups

Repeat the steps above to create race/ethnicity subgroups for each year. In section `3. Select demographics` of the CDC WONDER extract page, construct the following four race groups for each year:

* Non-Hispanic White: `Hispanic Origin` - Not Hispanic or Latino. `Single Race 6` - White (name the title of the extract `injury_deaths_raceth_nhwhite_YYYY`).
* Non-Hispanic Black: `Hispanic Origin` - Not Hispanic or Latino. `Single Race 6` - Black or African American (name the title of the extract `injury_deaths_raceth_nhblack_YYYY`).
* Hispanic: `Hispanic Origin` - Hispanic or Latino. `Single Race 6` - All Races (name the title of the extract `injury_deaths_raceth_hisp_YYYY`).
* Non-Hispanic Other: `Hispanic Origin` - Not Hispanic or Latino. `Single Race 6` - American Indian or Alaska Native; Asian; Native Hawaiian or Other Pacific Islander; More than one race (name the title of the extract `injury_deaths_raceth_nhother_YYYY`).

Move all of the resulting `.txt` files from your Downloads folder to the `mobility-from-poverty\04_health\exposure-to-trauma\data\single-race\subgroups` directory.



# 3. Read in and clean mortality data

This section reads in, appends, and cleans the 22 data extracts created in the previous section. Parts of this section could probably be written with a function, but the format is slightly different for each section, so I preferred to go section by section and be explicit about what I was doing at each step.

## 3.1 Bridged Race (2014-2020), All
List all the files in the `bridged-race` folder
```{r create-paths}
paths <- list.files(here::here("04_health", "exposure-to-trauma", "data", "bridged-race"),
                    pattern = "[.]txt$", full.names = TRUE)
```

Check that all files have been properly downloaded
```{r check-files}
# Create list of expected years
expected_years <- tribble(
  ~year,
  "2014",
  "2015",
  "2016",
  "2017",
  "2018",
  "2019",
  "2020",
) 

# Use years above to create vector of expected files
expected_files <- c(
  here::here(paste0("04_health/exposure-to-trauma/data/bridged-race/injury_deaths_all_",
                    expected_years$year,
                    ".txt"))
)

# Ensure expected files are included in the `bridged-race` directory before proceeding
if(!all(expected_files %in% paths)) {
  stop("Error: Some expected files are missing. Please refer to the download directions in section 2 above.")
}

```

```{r read-deaths-br}
deaths_br_raw <- paths |> 
  set_names(basename(paths)) |>  # Name elements of paths by their filenames
  map_dfr(
    ~ utils::read.delim(.x) |> 
      mutate(
        Deaths = as.character(Deaths),  # Convert Deaths to character for consistency
        Population = as.numeric(Population)
      ),
    .id = "filename"  # Add the filename as a column
  ) |> 
  mutate(
    year = parse_number(filename),  # Extract year from filename
    subgroup_type = str_extract(filename, "(all)"), # Extract subgroup from filename
  )

```

The raw `.txt` files which we read in from CDC WONDER contains a `Notes` column which we drop. We retain all information for the age-adjusted death rate (rate, confidence interval, and standard error). We retain the crude rate (without confidence interval or standard error) for comparison to another data set later in this file.
```{r clean-data}
# Rename variables, remove `Notes` column, and remove crude rate confidence interval and standard error
deaths_br_clean <- deaths_br_raw |>
  select(
    year,
    county_name = County,
    GEOID = County.Code,
    rate_injury_death = Crude.Rate,
    rate_injury_death_lb = Crude.Rate.Lower.95..Confidence.Interval,
    rate_injury_death_ub = Crude.Rate.Upper.95..Confidence.Interval,
    rate_injury_death_se = Crude.Rate.Standard.Error,
    deaths = Deaths,
    subgroup_type
  ) |>
  # Remove empty rows resulting from deleting the `Notes` column, and remove the total row
  filter(!is.na(GEOID)) |>
  # Replace "suppressed", "unreliable", and "missing" values with NA
  mutate(
    across(
      .cols = c(starts_with("rate"), deaths
      ),
      ~ifelse(. %in% c("Suppressed", "Unreliable", "Missing"), NA, .))) |>
  # Change values from character to numeric
  mutate(across(.cols = c(starts_with("rate"), deaths), .fns = as.numeric)) |>
  # Edit GEOID
  mutate(GEOID = str_pad(GEOID, 5, pad = "0")) |>
  mutate(subgroup = "all")


```

## 3.2 Single Race (2021-2023), All
```{r create-paths}
paths <- list.files(here::here("04_health", "exposure-to-trauma", "data", "single-race", "all"),
                    pattern = "[.]txt$", full.names = TRUE)

```

Check that all files have been properly downloaded
```{r check-files}
# Create list of expected years
expected_years <- tribble(
  ~year,
  "2021",
  "2022",
  "2023",
) 

# Use years above to create vector of expected files
expected_files <- c(
  here::here(paste0("04_health/exposure-to-trauma/data/single-race/all/injury_deaths_all_",
                    expected_years$year,
                    ".txt"))
)

# Ensure expected files are included in the `single-race\all` directory before proceeding
if(!all(expected_files %in% paths)) {
  stop("Error: Some expected files are missing. Please refer to the download directions in section 2 above.")
}

```

```{r read-deaths-br}
deaths_sr_raw <- paths |> 
  set_names(basename(paths)) |>  # Name elements of paths by their filenames
  map_dfr(
    ~ utils::read.delim(.x) |> 
      mutate(
        Deaths = as.character(Deaths),  # Convert Deaths to character for consistency
        Population = as.numeric(Population)
      ),
    .id = "filename"  # Add the filename as a column
  ) |> 
  mutate(
    year = parse_number(filename),  # Extract year from filename
    subgroup_type = str_extract(filename, "(all)"), # Extract subgroup from filename
  )

```


The raw `.txt` files which we read in from CDC WONDER contains a `Notes` column which we drop. We retain all information for the age-adjusted death rate (rate, confidence interval, and standard error). We retain the crude rate (without confidence interval or standard error) for comparison to another data set later in this file.

```{r clean-data}
# Rename variables, remove `Notes` column, and remove crude rate confidence interval and standard error
deaths_sr_clean <- deaths_sr_raw |>
  select(
    year,
    county_name = County,
    GEOID = County.Code,
    rate_injury_death = Crude.Rate,
    rate_injury_death_lb = Crude.Rate.Lower.95..Confidence.Interval,
    rate_injury_death_ub = Crude.Rate.Upper.95..Confidence.Interval,
    rate_injury_death_se = Crude.Rate.Standard.Error,
    deaths = Deaths,
    subgroup_type
  ) |>
  # Remove empty rows resulting from deleting the `Notes` column, and remove the total row
  filter(!is.na(GEOID)) |>
  # Replace "suppressed", "unreliable", and "missing" values with NA
  mutate(
    across(
      .cols = c(starts_with("rate"), deaths
      ),
      ~ifelse(. %in% c("Suppressed", "Unreliable", "Missing"), NA, .))) |>
  # Change values from character to numeric
  mutate(across(.cols = c(starts_with("rate"), deaths), .fns = as.numeric)) |>
  # Edit GEOID
  mutate(GEOID = str_pad(GEOID, 5, pad = "0")) |>
  mutate(subgroup = "all")


```

## 3.2 Single Race (2021-2023), Subgroups
```{r create-paths}
paths <- list.files(here::here("04_health", "exposure-to-trauma", "data", "single-race", "subgroups"),
                    pattern = "[.]txt$", full.names = TRUE)

```

Check that all files have been properly downloaded
```{r check-files}
# Create list of expected years
expected_years <- tribble(
  ~year,
  "nhwhite_2021",
  "nhwhite_2022",
  "nhwhite_2023",
  "nhblack_2021",
  "nhblack_2022",
  "nhblack_2023",
  "hisp_2021",
  "hisp_2022",
  "hisp_2023",
  "nhother_2021",
  "nhother_2022",
  "nhother_2023",
) 

# Use years above to create vector of expected files
expected_files <- c(
  here::here(paste0("04_health/exposure-to-trauma/data/single-race/subgroups/injury_deaths_raceth_",
                    expected_years$year,
                    ".txt"))
)

# Ensure expected files are included in the `single-race\subgroups` directory before proceeding
if(!all(expected_files %in% paths)) {
  stop("Error: Some expected files are missing. Please refer to the download directions in section 2 above.")
}

```

```{r read-deaths-br}
deaths_sr_subgroups_raw <- paths |> 
  set_names(basename(paths)) |>  # Name elements of paths by their filenames
  map_dfr(
    ~ utils::read.delim(.x) |> 
      mutate(
        Deaths = as.character(Deaths),  # Convert Deaths to character for consistency
        Population = as.numeric(Population)
      ),
    .id = "filename"  # Add the filename as a column
  ) |> 
  mutate(
    year = parse_number(filename),  # Extract year from filename
    subgroup_type = str_extract(filename, "(raceth)"), # Extract subgroup from filename
    subgroup = case_when(
      str_detect(filename, "nhwhite") ~ "nhwhite",
      str_detect(filename, "nhblack") ~ "nhblack",
      str_detect(filename, "hisp") ~ "hisp",
      str_detect(filename, "nhother") ~ "nhother",
      TRUE ~ NA_character_
    )
  )

```

```{r clean-data}
# Rename variables, remove `Notes` column, and remove crude rate confidence interval and standard error
deaths_sr_subgroups_clean <- deaths_sr_subgroups_raw |>
  select(
    year,
    county_name = County,
    GEOID = County.Code,
    rate_injury_death = Crude.Rate,
    rate_injury_death_lb = Crude.Rate.Lower.95..Confidence.Interval,
    rate_injury_death_ub = Crude.Rate.Upper.95..Confidence.Interval,
    rate_injury_death_se = Crude.Rate.Standard.Error,
    deaths = Deaths,
    subgroup_type,
    subgroup
  ) |>
  # Remove empty rows resulting from deleting the `Notes` column, and remove the total row
  filter(!is.na(GEOID)) |>
  # Replace "suppressed", "unreliable", and "missing" values with NA
  mutate(
    across(
      .cols = c(starts_with("rate"), deaths
      ),
      ~ifelse(. %in% c("Suppressed", "Unreliable", "Missing"), NA, .))) |>
  # Change values from character to numeric
  mutate(across(.cols = c(starts_with("rate"), deaths), .fns = as.numeric)) |>
  # Edit GEOID
  mutate(GEOID = str_pad(GEOID, 5, pad = "0"))


```

## 3.4 Append death rates
```{r}
death_rates <- bind_rows(
  deaths_br_clean,
  deaths_sr_clean,
  deaths_sr_subgroups_clean
)

```


CDC WONDER reports rates as `unreliable` when the death count is less than 20. We changed these rates to `NA` in our data. We also want to change the lower bound, upper bound, and standard error to missing for these observations as well. Note that standard error isn't included in the final file, but the confidence interval bounds are. There are also instances where the upper and lower bounds are 0 because there are 0 deaths, but the rate was `Unreliable`; these also get replaced as `NA` in the code below.
```{r}
death_rates <- death_rates |>
  mutate(
    rate_injury_death_lb = if_else(is.na(rate_injury_death), NA, rate_injury_death_lb),
    rate_injury_death_ub = if_else(is.na(rate_injury_death), NA, rate_injury_death_ub),
    rate_injury_death_se = if_else(is.na(rate_injury_death), NA, rate_injury_death_se)
  )

```


## 3.5 Reshape wide
```{r}
death_rates_wide <- death_rates |>
  select(-subgroup_type) |>
  pivot_wider(
    id_cols = c(year, county_name, GEOID),
    names_from = subgroup,
    names_sep = "_",
    values_from = c(rate_injury_death, rate_injury_death_lb, rate_injury_death_ub, rate_injury_death_se, deaths)
  )
  
```


```{r clean-environment-s3}
# Clean up environment
rm(paths, expected_years, expected_files, deaths_br_raw, deaths_br_clean, deaths_sr_raw, deaths_sr_clean, deaths_sr_subgroups_raw, deaths_sr_subgroups_clean)
  
```

# 4. Join mortality data onto universe of Urban counties

This section reads in the Urban Institute's universe of counties and joins the CDC injury death data to those counties.

## 4.1 Read in Urban county file for 2014-2020

```{r load-counties}
urban_counties <- read.csv(here::here("geographic-crosswalks", "data", "county-populations.csv")) |>
  mutate(state = str_pad(state, 2, pad = "0"),
         county = str_pad(county, 3, pad = "0"),
         GEOID = str_c(state, county))

urban_counties |>
  group_by(year) |>
  count()

```



### 4.2 Identify counties in Urban universe but not in CDC WONDER

44 observations are in our universe of counties but not in the CDC data (from Alaska, Connecticut, and South Dakota). 

+ Chugach Census Area, AK is missing for 2020-2023.
+ Copper River Census Area, AK is missing for 2020-2023.
+ Kusilvak Census Area, AK is missing for 2015-2023.
+ All 9 of Connecticut's planning regions are missing for 2022-2023.
+ Oglala Lakota County, SD is missing for 2015-2023

```{r check-missing-cdc}
missing_CDC <- anti_join(
  x = urban_counties, 
  y = death_rates_wide, 
  by = c("year", "GEOID")
  )

missing_CDC |>
  group_by(state_name, county_name) |>
  count(year)

```

Shannon County, SD was renamed to Oglala Lakota County, SD in 2014 (ratified early 2015) ([source](https://www.census.gov/programs-surveys/geography/technical-documentation/county-changes.2010.html#list-tab-957819518)). We convert Shannon County, SD to Oglala Lakota County, SD in the CDC deaths data to reflect this change.

```{r fix-shannon-county}
death_rates_wide <- death_rates_wide |>
  mutate(
    county_name = if_else(county_name == "Shannon County, SD" & year != "2014", 
                          "Oglala Lakota County, SD", 
                          county_name),
    GEOID = if_else(GEOID == "46113" & year != "2014",
                    "46102", 
                    GEOID)
  )

```

Wade Hampton Census Area, AK was renamed to Kusilvak Census Area, AK in 2015 ([source](https://www.census.gov/programs-surveys/geography/technical-documentation/county-changes.2010.html#list-tab-957819518)). We convert Wade Hampton Census Area, AK to Kusilvak Census Area, AK in the CDC deaths data to reflect this change.

```{r fix-wade-hampton}
death_rates_wide <- death_rates_wide |>
  mutate(
    county_name = if_else(county_name == "Wade Hampton Census Area, AK" & year != "2014", 
                          "Kusilvak Census Area, AK", 
                          county_name),
    GEOID = if_else(GEOID == "02270" & year != "2014", 
                    "02158", 
                    GEOID)
  )

```

### 4.3 Identify counties in CDC WONDER but not in Urban universe

After addressing the counties above, 55 observations (14 counties) are in the CDC data but not our universe of counties. 

+ Bedford city, VA is missing for 2014-2020
+ Clifton Forge city, VA is missing for 2014-2020
+ Prince of Wales-Outer Ketchikan Census Area, AK is missing for 2014-2020
+ Skagway-Hoonah-Angoon Census Area, AK is missing for 2014-2020
+ Wrangell-Petersburg Census Area, AK is missing for 2014-2020
+ Valdez-Cordova Census Area, AK is missing for 2020-2023
+ All 8 counties from Connecticut are missing for 2022-2023


```{r check-missing-urban}
missing_urban <- anti_join(
  x = death_rates_wide, 
  y = urban_counties, 
  by = c("year", "GEOID")
  )

missing_urban |>
  group_by(county_name) |>
  count(year)

```

Bedford County, VA (51019) added the former independent city of Bedford (51515) effective 2013-07-01 ([source](https://www.census.gov/programs-surveys/geography/technical-documentation/county-changes.2010.html#list-tab-957819518)). Deaths are population estimates are missing (zero) for Bedford City, Virginia beginning in year 2014 ([source](https://wonder.cdc.gov/wonder/help/ucd.html#)). We drop Bedford City, VA from the CDC deaths data.

```{r}
death_rates_wide |>
  filter(GEOID=="51515")
  
```

Alleghany County, VA (51005) added the former independent city of Clifton Forge (51560) effective 2001-07-01 ([source](https://www.census.gov/programs-surveys/geography/technical-documentation/county-changes.2000.html#list-tab-957819518)). Beginning in 2001, death counts and population estimates for Clifton Forge city, VA have been combined with those for Alleghany county ([source](https://wonder.cdc.gov/wonder/help/ucd.html#)). We drop Clifton Forge city, VA from the CDC deaths data.
```{r}
death_rates_wide |>
  filter(GEOID == "51560")

```

Prior to 2013, Prince of Wales-Outer Ketchikan Census Area, AK (02201), Skagway-Hoonah-Angoon Census Area, AK (02232) and Wrangell-Petersburg Census Area, AK (02280) were all split and their parts were used to create new Census Areas ([source](https://www.census.gov/programs-surveys/geography/technical-documentation/county-changes.2000.html#list-tab-957819518)). Beginning in 2014, deaths and population data for these areas are no longer available ([source](https://wonder.cdc.gov/wonder/help/ucd.html#)). Data are only available for these areas for years 1999-2013; deaths and population estimates for years 2014-2020 are missing (zero). We drop these three county equivalents from the CDC deaths data.
```{r}
death_rates_wide |>
  filter(GEOID %in% c("02201", "02232", "02280"))

```

Remove these five counties from the death rates file
```{r}
# It appears these counties are only included in the CDC WONDER data for consistency even though they no longer exist in our years of interest
death_rates_wide <- death_rates_wide |>
  filter(!GEOID %in% c("51515", "51560", "02201", "02232", "02280"))

```


### 4.4 Address the split of Valdez-Cordova Census Area, AK

Effective 2019-01-02, Valdez-Cordova Census Area, AK (02261) split to form Chugach Census Area, AK (02063) and Copper River Census Area, AK (02066). This change is not reflected in the CDC deaths data. Last year, we looked into using the `interpolate_pw()` [function](https://rdrr.io/cran/tidycensus/man/interpolate_pw.html) from the `library(tidycensus)` package, which uses block-level population estimates to weight the interpolation of death rates across geographies, to get estimates of the age-adjusted rates for each of the new counties. However, because the measure we want to interpolate is population-standardized, we just end up with the original rate we started with for both of the interpolated geometries. Instead, we apply the same death rate for both of these new county equivalents and later set the data quality flag to low for these two observations.
```{r save-death-rate}
death_rates_wide |>
  filter(GEOID == "02261")

death_rates_wide |>
  filter(GEOID %in% c("02063", "02066"))
```

Assign the Valdez-Cordova 2020 death rate to an object. Later, we apply this same death rate to the two new county equivalents. We also set the quality indicator to low for these county equivalents later in the file.
```{r save-death-rate}
death_rate_vc20 <- death_rates_wide |>
  filter((GEOID == "02261" & year==2020)) |>
  pull(rate_injury_death_all)

death_rate_vc21 <- death_rates_wide |>
  filter((GEOID == "02261" & year==2021)) |>
  pull(rate_injury_death_all)

death_rate_vc22 <- death_rates_wide |>
  filter((GEOID == "02261" & year==2022)) |>
  pull(rate_injury_death_all)

death_rate_vc23 <- death_rates_wide |>
  filter((GEOID == "02261" & year==2023)) |>
  pull(rate_injury_death_all)

```

Remove Valdez-Cordova Census Area, AK in 2020-2023 because it is not in the Urban universe of counties
```{r remove-vc}
death_rates_wide <- death_rates_wide |>
  filter(!(GEOID == "02261" & year %in% c(2020, 2021, 2022, 2023)))

```

```{r clean-environment-4.4}
# Remove obsolete objects
rm(missing_CDC, missing_urban)
```

### 4.5 Join data

Join county-level death rates from CDC WONDER for 2014-2023 onto Urban's county universe file

The Connecticut counties still do not match in 2022 and 2023 between the two files.

There are still 2 unmatched observations from Urban's universe of counties (Chugach Census Area, AK and Copper River Census Area, AK in 2020). After joining, we apply the CDC WONDER death rate from Valdez-Cordova Census Area to these two new county equivalents.
```{r join-data}
joined_data <- full_join(
  x = urban_counties,
  y = death_rates_wide |>
    select(-c("county_name")),
  by = c("year", "GEOID")
)

# Show that the unmatched observations from Urban universe of counties are those we expect
anti_join(
  x = urban_counties,
  y = death_rates_wide |>
    select(-c("county_name")),
  by = c("year", "GEOID")
) |> 
  count(county_name, GEOID, year)
  
```

Apply the CDC WONDER death rate from Valdez-Cordova Census Area in 2020-2023 to these two new county equivalents.
```{r assign-vc-death-rate}
joined_data <- joined_data |>
  mutate(
    rate_injury_death_all = case_when(
      GEOID %in% c("02063", "02066") & year==2020 ~ death_rate_vc20,
      GEOID %in% c("02063", "02066") & year==2021 ~ death_rate_vc21,
      GEOID %in% c("02063", "02066") & year==2022 ~ death_rate_vc22,
      GEOID %in% c("02063", "02066") & year==2023 ~ death_rate_vc23,
      TRUE ~ rate_injury_death_all
    )
  )

```

## 4.6 Reshape long
```{r}
joined_data <- joined_data |>
  pivot_longer(
    cols = starts_with("rate_injury_death_") | starts_with("rate_injury_death_lb_") | starts_with("rate_injury_death_ub_") | starts_with("rate_injury_death_se_") | starts_with("deaths_"), 
    names_to = c("measure", "subgroup"), 
    names_pattern = "(.*)_(.*)",
    values_to = "value" 
  ) |>
  pivot_wider(
    names_from = "measure",
    values_from = "value"
  ) |>
  filter((year >= 2014 & year <= 2020 & subgroup == "all") | (year >= 2021 & year <= 2023))
  
```


```{r clean-environment-4.5}
# Remove obsolete objects
rm(death_rate_vc20, death_rate_vc21, death_rate_vc22, death_rate_vc23)
```



## 5. Validation

Now that we only have valid units of observation, we validate the data by performing several checks and visualizations to ensure that the data are as we expect. We also compare our data to an external source.

### 5.1 Table of injury death rates

We first explore the data with this table that shows the injury death rates in each county. Click on the variable columns to sort the table.

REVIEWER - I kept getting an error with this chunk that I could not figure out

```{r table, echo = FALSE}
# joined_data |>
#   select(
#     county_name, GEOID, year,
#     rate_injury_death_all, rate_injury_death_nhwhite, rate_injury_death_nhblack, rate_injury_death_hisp, rate_injury_death_nhother
#   ) |>
#   reactable::reactable(
#     filterable = TRUE,
#     searchable = TRUE,
#     defaultPageSize = 10,
#     highlight = TRUE
#   )

```

### 5.2 Distribution of injury death rates and missingness

The county-level rate of injury deaths per 100,000 people has increased from 2014-2023, but because these are crude rates instead of age-adjusted, it could be that the underlying age distribution of the population has changed.

```{r check-distribtuion-all}
joined_data |>
  group_by(subgroup, year) |>
  summarise(
    quantiles = list(quantile(rate_injury_death, 
                              probs = c(0, 0.2, 0.4, 0.6, 0.8, 0.9, 0.99, 1), 
                              na.rm = TRUE))
  ) |>
  unnest_wider(quantiles)

```



The rate of missing injury death rates is about the same for each year. It is higher in 2021 than in other years, but this makes sense because our data for 2021 is a 4-year pool while other years are 5-year pools. All race subgroups except non_hispanic white have high rates of missing.
```{r check-missing, message = FALSE}
joined_data |>
  group_by(subgroup, year) |>
  summarize(
    missing = sum(is.na(rate_injury_death)),
    missing_pct = sum(is.na(rate_injury_death)) / n() * 100
  )

```

All of the injury death rates are positive

```{r test-positive}
testthat::test_that("Check that all values of rate_injury_death are greater than zero if not missing", {
  expect_true(all(joined_data$rate_injury_death > 0 | is.na(joined_data$rate_injury_death)))
})

```

All of the injury death rates are less than 100,000 (the rates are per 100,000 people, so the rates should not be greater than 100,000)

```{r test-lt-100k}
testthat::test_that("Check that all values of rate_injury_death are less than 100,000 if not missing", {
  expect_true(all(joined_data$rate_injury_death < 100000 | is.na(joined_data$rate_injury_death)))
})

```

### 5.3 Visualizations

The distribution of death rates is roughly the same across all years

```{r plot-distribution}
joined_data |>
  filter(!is.na(rate_injury_death) & subgroup=="all") |>
  ggplot(aes(rate_injury_death)) +
  geom_histogram(binwidth = 5) +
  facet_wrap(~ year, scales = "free_x") +
  labs(title = "")

```

```{r}
joined_data |>
  filter(!is.na(rate_injury_death) & subgroup!="all") |>
  ggplot(aes(rate_injury_death)) +
  geom_histogram(binwidth = 5) +
  facet_wrap(~ year + subgroup, scales = "free_x") +
  labs(title = "")
```


Check where high injury death rates are concentrated

```{r plot-rate-pop}
joined_data |>
  filter(!is.na(population),
         !is.na(rate_injury_death),
         subgroup=="all") |>
  mutate(size = if_else(population < 200000, "1. small population", "2. big population")) |>
  # Standardize population by denominating in 1000s so the axis labels are more legible
  mutate(population = population / 1000) |>
  ggplot(aes(population, rate_injury_death)) +
  geom_point(alpha = 0.1) +
  facet_wrap(~ size, scales = "free_x") +
  labs(title = "High Injury Death Rates are Concentrated in Smaller Counties",
       x = "Population (thousands)",
       y = "Injury death rate") +
  scatter_grid()

```

Check relationship between number of injury deaths and injury death rates

```{r plot-rate-count}
joined_data |>
  filter(!is.na(rate_injury_death),
         !is.na(deaths),
         subgroup=="all") |>
  ggplot(aes(deaths, rate_injury_death)) +
  geom_point(alpha = 0.2) +
  labs(title = "High Injury Death Rates are Concentrated in Counties with Few Injury Deaths") +  
  scatter_grid()

```


## 6. Add data quality flags

This section creates a variable for the coefficient of variation (CV) for each county and assigns a quality indicator based on that county's CV. Smaller CVs are indicative of high quality data.

Note that we manually assign a low quality value to Chugach Census Area, AK and Copper River Census Area, AK. We copied the crude rate of injury deaths reported by CDC WONDER for Valdez-Cordova Census Area, AK for these observations, but we did not copy other values (confidence interval, standard error, etc.). We want users to know to interpret estimates for these two geographies with caution because of the underlying data challenges. If we left the data quality values as missing for these two observations, they would be the only counties with a missing quality value but a non-missing rate. 

```{r add-quality-flags}
joined_data <- joined_data |>
  mutate(cv = rate_injury_death_se / rate_injury_death,
         rate_injury_death_quality = case_when(
           cv < 0.2 ~ 1,
           cv < 0.4 ~ 2,
           cv >= 0.4 | GEOID %in% c("02063", "02066") ~ 3
         )
  )

```

Only 8 observations have a data quality value of 3 (Chugach Census Area, AK and Copper River Census Area, AK in each year 2021-2023). 2,750 observations are missing data quality for the total death rate.
```{r}
joined_data |>
  group_by(subgroup) |>
  count(rate_injury_death_quality)

```


Most estimates have small coefficients of variation and are therefore of high quality.
```{r plot-quality}
joined_data |>
  group_by(subgroup) |>
  filter(!is.na(rate_injury_death_quality)) |>
  ggplot(aes(x = rate_injury_death_quality)) +
  facet_wrap(~ subgroup) +
  geom_bar()
  
```

Note that the 26,458 counties with missing quality values are those that CDC WONDER suppressed due to fewer than 10 deaths, marked as "unreliable" due to fewer than 20 deaths, or marked as "not applicable" because the population denominator figure was unavailable.
```{r}
joined_data |>
  group_by(subgroup) |>
  count(rate_injury_death_quality)

```

```{r}
joined_data |>
  filter(is.na(rate_injury_death_quality)) |>
  count(rate_injury_death)
  
```


All estimates have small standard errors.

```{r plot-se}
joined_data |>
  filter(!is.na(rate_injury_death_quality)) |>
  ggplot(aes(rate_injury_death, rate_injury_death_se)) +
  geom_point(alpha = 0.1, size = 0.5) +
  geom_abline(aes(slope = 0.4, intercept = 0)) +
  labs(title = "All Estimates Have Small SEs",
       subtitle = "Line represents a CV of 0.4") +
  coord_equal() +
  scatter_grid()

```

## 7. Save and write out data

```{r write-data}
# Remove unnecessary variables and sort by year, state, and county
final_data_all <- joined_data |>
  select(
    year, 
    state, 
    county, 
    rate_injury_death, 
    rate_injury_death_lb, 
    rate_injury_death_ub, 
    rate_injury_death_quality,
    subgroup
  ) |>
  arrange(year, state, county, subgroup)


# Write out final data
write_csv(x = final_data,
          file = here::here(
            "04_health",
            "exposure-to-trauma",
            "final",
            "rate_injury_deaths_metric_all_county.csv"
          )
)

```
