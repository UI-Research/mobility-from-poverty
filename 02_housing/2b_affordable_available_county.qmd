---
title: "Housing Affordable and Available - County"
format: html
editor: visual
---

ACS Code: Affordable and available housing metric, subgroup Geography: county Amy Rogin (2023-2024) Using IPUMS extract for ACS 2022 Based on processes developed by the Seattle Office of Planning & Community Dev for the displacement risk indicators

Definitions of AFFORDABILITY and AVAILABILITY from page 20: https://www.huduser.gov/portal/sites/default/files/pdf/Worst-Case-Housing-Needs-2021.pdf

• Affordability measures the extent to which enough rental housing units of different costs can provide each renter household with a unit it can afford (based on the 30-percent-of-income standard). Affordability, which is the broadest measure of the relative supply of the housing stock, addresses whether sufficient housing units would exist if allocated solely on the basis of cost. The affordable stock includes both vacant and occupied units.

• Availability measures the extent to which affordable rental housing units are available to renters within a particular income range. Availability is a more restrictive concept because units that meet the definition must be available and affordable. Some renters choose to spend less than 30 percent of their incomes on rent, occupying housing that is affordable to renters of lower incomes. Those units thus are not available to lower-income renters. A unit is available at a given level of income if (1) it is affordable at that level, and (2) it is occupied by a renter either at that income level or at a lower level or is vacant.

Process: (1) Housekeeping (2) Import housing affordability measures calculated in 1b_housing_county.R (3) At rent and down rent - A unit is available at a given level of income if (1) it is affordable at that level, and (2) it is occupied by a renter either at that income level or at a lower level or is vacant. (3a) Calculate the "at rent" number of units occupied at the appropriate income level or a lower level Do this for all units, and for renter and owner subgroups (3b) Summarize at_rent for each subgroup and number of units/households at each income threshold by place (4) calculate the number of affordable and available units at each income level per 100 households (5) Create the Data Quality variable (6) Clean and export (6a) subgroup file (6b) overall file (7) Quality Check

## (1) Housekeeping

Set working directory to \[gitfolder\]: Open mobility-from-poverty.Rproj to make sure all file paths will work

```{r}
# Libraries you'll need
library(tidyverse)
library(tidylog)
library(ipumsr)
library(readxl)
library(skimr)

```

```{r}
# Specify the target year for the data
target_year = 2014
```

## (2) Import housing affordability data (created in 1b_housing_county.R)

Either run "1b_housing_county.R" OR: Import the already prepared housing affordability and vacancy files

```{r}
# this file is at the household level still so we can 
# calculate the availability metric
households_yyyy <- read_csv(here::here("02_housing/data/temp/households_county.csv")) %>% 
  filter(year == target_year)


# this file is at the county level for calculating the overall number
# of affordable and available units per 100 households in step 4
vacant_summed_yyyy <- read_csv(here::here("02_housing/data/temp/vacant_summed_county.csv")) %>% 
  filter(year == target_year)
```

## (3) Availability

A unit is available at a given level of income if (1) it is affordable at that level, and (2) it is occupied by a renter either at that income level or at a lower level or is vacant.

-   supply is number of housing units in each income bracket. This is calculated in step 5 of the 1b_housing_county.R file (variables: Affordable80AMI_all, Affordable80AMI_renter, Affordable80AMI_owner)
-   demand is number of households in each income bracket. This is calculated in step 5 of the 1b_housing_county. file (variables: below80AMI, below50AMI, below30AMI)

### (3a) Calculate the "at rent" number of units occupied at the appropriate income level or a lower level

Do this for all units, and for renter and owner subgroups e.g., unit is affordable at 30 AMI and household is below 30 AMI and the unit is occupied (include vacancy in step 4)

```{r}
available_yyyy <- households_yyyy %>% 
  mutate(
    # AT RENT 30% AMI
    at_rent30_all = if_else(Affordable30AMI_all == 1 & Below30AMI == 1 & VACANCY == 0, 1, 0), 
    at_rent30_renter = if_else(OWNERSHP == 2 & Affordable30AMI_all == 1 & Below30AMI == 1 & VACANCY == 0, 1, 0),
    at_rent30_owner = if_else(OWNERSHP == 1 & Affordable30AMI_all == 1 & Below30AMI == 1 & VACANCY == 0, 1, 0), 
    # AT RENT 50% AMI
    at_rent50_all = if_else(Affordable50AMI_all == 1 & Below50AMI == 1 & VACANCY == 0, 1, 0), 
    at_rent50_renter = if_else(OWNERSHP == 2 & Affordable50AMI_all == 1 & Below50AMI == 1  & VACANCY == 0, 1, 0),
    at_rent50_owner = if_else(OWNERSHP == 1 & Affordable50AMI_all == 1 & Below50AMI == 1  & VACANCY == 0, 1, 0),
    # AT RENT 80% AMI
    at_rent80_all = if_else(Affordable80AMI_all == 1 & Below80AMI == 1 & VACANCY == 0, 1, 0), 
    at_rent80_renter = if_else(OWNERSHP == 2 & Affordable80AMI_all == 1 & Below80AMI == 1  & VACANCY == 0, 1, 0),
    at_rent80_owner = if_else(OWNERSHP == 1 & Affordable80AMI_all == 1 & Below80AMI == 1  & VACANCY == 0, 1, 0)) 

```

### (3b) Summarize at_rent for each subgroup and number of units/households at each income threshold by place

```{r}
available_yyyy <- available_yyyy %>% 
  group_by(statefip, county) %>% 
  dplyr::summarise(across(matches("Below|Affordable|at_"), ~sum(.x*HHWT, na.rm = TRUE)), 
                   HHobs_count = n()) %>% 
  rename("state" = "statefip") %>% 
  ungroup()
```

## (4) calculate the number of affordable and available units at each income level

This is the number of units that are rented to people at or below each income threshold plus the number of vacant units at that income threshold over the total number of households in each income bracket

```{r}
available_yyyy_final <- available_yyyy %>% 
  # join in vacancy data
  left_join(vacant_summed_yyyy, by = c("state", "county")) %>% 
  mutate(
    # number of affordable and available at 30 AMI per 100 households
    share_affordable_available_30_ami_all = (at_rent30_all+Affordable30AMI_all_vacant)/Below30AMI, 
    share_affordable_available_30_ami_renter = (at_rent30_renter+Affordable30AMI_renter_vacant)/Below30AMI_renter, 
    share_affordable_available_30_ami_owner = (at_rent30_owner+Affordable30AMI_owner_vacant)/Below30AMI_owner, 
    
    # number of affordable and available at 50 AMI per 100 households
    share_affordable_available_50_ami_all = (at_rent50_all+Affordable50AMI_all_vacant)/Below50AMI, 
    share_affordable_available_50_ami_renter = (at_rent50_renter+Affordable50AMI_renter_vacant)/Below50AMI_renter, 
    share_affordable_available_50_ami_owner = (at_rent50_owner+Affordable50AMI_owner_vacant)/Below50AMI_owner, 
    
    # number affordable and available at 80 AMI per 100 households
    share_affordable_available_80_ami_all = (at_rent80_all+Affordable80AMI_all_vacant)/Below80AMI, 
    share_affordable_available_80_ami_renter = (at_rent80_renter+Affordable80AMI_renter_vacant)/Below80AMI_renter, 
    share_affordable_available_80_ami_owner = (at_rent80_owner+Affordable80AMI_owner_vacant)/Below80AMI_owner
  )
```

## (5) Clean and export

### (5a) subgroup file

Combine with overall share_affordable file

```{r}
affordable_yyyy_subgroup <- read_csv(here::here("02_housing/data/housing_subgroups_county.csv")) %>%
  filter(year == target_year) %>%
  select(state, county,subgroup, matches("quality"))

# turn long for subgroup output
available_yyyy_subgroup <- available_yyyy_final %>%
  select(state, county, starts_with("share_affordable_available_")) %>% 
  # create year variable
  mutate(year = target_year) %>% 
  # seperate share_afforadable by AMI and the subgroup
  pivot_longer(cols = c(contains("share_affordable")), 
               names_to = c("available", "subgroup"),
               names_pattern = "(.+?(?=_[^_]+$))(_[^_]+$)", # this creates two columns - "share_affordable_XXAMI" and "_owner/_renter/_all"
               values_to = "value") %>% 
  # pivot_wider again so that each share_affordable by AMI is it's own column with subgroups as rows
  pivot_wider(
    names_from = available, 
    values_from = value
  ) %>% 
  # clean subgroup names and add subgroup type column 
  # remove leading underscore and capitalize words
  mutate(subgroup = str_remove(subgroup, "_") %>% str_to_title(),
         subgroup_type = "tenure") %>% 
  # join with affordable values for final file
  left_join(affordable_yyyy_subgroup) %>% 
  # create a rate affordable available quality flag
  # THIS IS THE SAME AS THE SHARE AFFORDABLE QUALITY FLAG
  # BECAUSE BOTH ARE BASED ON THE UNDERLYING HOUSEHOLD SAMPLE SIZE AND PUMA CROSSWALK
  mutate(across(matches("share_.*quality$"),
                list(share_affordable_available = ~.), 
                .names = "share_affordable_available_{str_remove(.col, 'share_affordable_')}"), 
         # subpress counties with too small of sample size
         across(matches("share_affordable_available_.*ami$"), \(x) if_else(is.na(get(cur_column() %>% paste0("_quality"))), NA, x))) %>% 
    # arrange columns and drop unneeded ones
  select(year, state, county, subgroup_type, subgroup, matches("available_30"),  matches("available_50"), matches("available_80"))


# export our file as a .csv
write_csv(available_yyyy_subgroup, here::here(paste0("02_housing/data/available_", target_year, "_subgroups_county.csv"))) 
```

### (5b) overall file

```{r}
# combine with share_affordable file 
available_yyyy_overall <- available_yyyy_subgroup %>% 
  filter(subgroup == "All") %>% 
  select(-subgroup,-subgroup_type)


# export our file as a .csv
write_csv(available_yyyy_overall, here::here(paste0("02_housing/data/available_", target_year, "_county.csv")))
```

## (6) Quality check tests

### (6a) see if state trends match National Low Income Housing Coalition Report - https://nlihc.org/gap

This is a really rough comparison since there isn't really local level data for this measure so I'm using the 2021 report state level numbers to snif test our results the NLIHC report has state level numbers for the number of units that are affordable and available for 30AMI households and the range is 17 to 58 (per 100 households) our range is .28 to .799

```{r}
# top values have poor housing quality flags
state_av <- available_yyyy_subgroup %>% 
  filter(subgroup == "All") %>% 
  group_by(state) %>% 
  summarise(across(starts_with("share_affordable_available"), 
                   ~ mean(.x, na.rm = TRUE))) 


range(state_av$share_affordable_available_30_ami)
```

### (6b) Histograms

```{r}
# share affordable and available at 30 AMI histogram
available_yyyy_subgroup %>% 
  ggplot(aes(share_affordable_available_30_ami))+
  geom_histogram()+
  facet_wrap(~subgroup)
```

```{r}
# share affordable and available at 50 AMI histogram
available_yyyy_subgroup %>% 
  ggplot(aes(share_affordable_available_50_ami))+
  geom_histogram()+
  facet_wrap(~subgroup)
```

```{r}
# share affordable and available at 80 AMI histogram
available_yyyy_subgroup %>% 
  ggplot(aes(share_affordable_available_80_ami))+
  geom_histogram()+
  facet_wrap(~subgroup)

# summarize 
summary(available_yyyy_subgroup)

```
