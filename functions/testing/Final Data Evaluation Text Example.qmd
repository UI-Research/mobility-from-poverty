---
title: "Final Data Evaluation Function Example"
author: "JP Walsh"
date: today
format:
  html:
    toc: true
    toc_float: true
    embed-resources: true
    code-fold: show
execute: 
  warning: false
editor_options: 
  chunk_output_type: console
---

## Final Data Test Function

The data team for the Mobility Metrics project has created a function that tests the final data being produced by each metric program. The function tests a series of baseline requirements for how the final data should be written out. It also looks at information from the final data expectations form which is filled out by a metric lead prior to updating a metric and approved by their technical reviewer. 

The function lives in the "functions/testing" file in the repository and is a R script title "evaluate_final_data.R". 

The template for the final data expectation evaluation form is also in the "functions/testing" as a CSV document titled "final_data_evaluation_form.csv".

## Example

This function must be used inside the program that creates your metric. It should be ran on the final version of the data that your program will read out as a CSV and which will subsequently be read into the overall metric combined files.

The first step is to source the function at the top of your program using the following code. This will stage the function in your environment.

```{r}
source(here::here("functions", "testing", "evaluate_final_data.R"))
```

In order to run the function you must fill out all relevant arguments to match the specifics of your code and final data file being tested. In this example, we evaluate the 2022 subgroup data for the housing availability metric.

As a first step, this example reads in the actual final data for the housing availability metric with subgroups at the county level for 2022. Note that this data would exist as a data frame within the program you are working on so you would not need to read it in.

```{r}
final_data <- read_csv(here("02_housing/data/available_2022_subgroups_county.csv"), show_col_types = FALSE)
```

The functions first argument asks for the path to the final data evaluation form. Note that we have filled out an example final data evaluation form for this example which you can find in the "functions/testing" folder. Generally, users should save their final data evaluation forms in the final data folder related to that metric.

Second, the function asks what the final data is called. We have read this in above and title the data frame "final data".

Third, the function asks whether there are subgroups in this data. For this example we input true. 

Finally, the function asks whether there are confidence intervals in this data. For this example we input false. Now we can run our tests on the data.

```{r}
evaluate_final_data(exp_form_path = "functions/testing/example_final_data_evaluation_form_housing.csv",
                data = final_data,
                subgroups = TRUE, confidence_intervals = FALSE)
```

It passed! Yay!

Note that there is also an argument for geography in the function which is by default set to "county". Because we are evaluation county level data we do not have to change this but if you are evaluation place data you will.