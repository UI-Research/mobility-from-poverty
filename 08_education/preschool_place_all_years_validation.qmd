---
title: "Access to pre-kindergarten Predictor, Place-level Combine Code"
author: "JP Walsh"
date: today
format:
  html:
    toc: true
    toc_float: true
    embed-resources: true
    code-fold: show
execute: 
  warning: false
editor_options: 
  chunk_output_type: console
---

*Program for the combination and validation of all years of the Access to Pre-Kindergarten Upward Mobility Predictor at the place-level*

Combine Code: Initially written by JP Walsh 2024.

Primary data derived from the IPUMS API.

## Housekeeping

Read in packages for use. If you do not have an IPUMS API key you will need to make one via the [IPUMS website](https://www.ipums.org/).

```{r, results='hide'}
library(tidyverse)
library(Hmisc)
library(ipumsr)
library(reactable)
library(srvyr)
library(scales)

options(scipen = 999)


# DO NOT PUSH YOUR API KEY. You only have to run this once and then comment it out as below.
#set_ipums_api_key("Your KEY", save = TRUE)

source(here::here("functions", "API", "extract_ipums.R"))
source(here::here("functions", "API", "ipums_repwt_pre-k.R"))
source(here::here("08_education", "R", "finalize_metric.R"))
source(here::here("08_education", "R", "calc_survey_mean.R"))
source(here::here("08_education", "R", "calc_survey_mean_subgroup.R"))
source(here::here("functions", "aws", "aws_s3.R"))
```

## Read intermediate files

Read in the intermediate files created for each ACS year.

Define existing intermeditae years and read them into function to combine.

Function reads the CSVs

```{r}
read_intermediate <- function(year, file_type){
  
  read_csv(paste0(here::here("08_education", "data", "intermediate", "preschool"), "/", "intermediate", year, ".csv"))
}
```

```{r}

metrics_education_all <- 


```


```{r}
metrics_education_sub <- 
```

## Result Validation

Create summary tables for the values from the results for both all and for subgroups.

```{r}
metrics_education_all %>% 
  select(share_in_preschool:share_in_preschool_quality) %>% 
  summary()

metrics_education_sub %>% 
  filter(subgroup != "All") %>% 
  select(share_in_preschool:share_in_preschool_quality) %>% 
  summary()
```

Look at distribution of pre-K attendance share by place for all and for subgroups.

```{r}

metrics_education_all %>% 
  filter(year == 2016) %>% 
  select(share_in_preschool) %>% 
  ggplot(aes(x = share_in_preschool)) +
  geom_density(alpha = 0.15) +
  theme_minimal() +
  ggtitle("Distribution of share prek_attendance, by place 2021 (5-year data)") +
  ylab("Density")

metrics_education_sub %>% 
  filter(year == 2016, subgroup != "All") %>% 
  select(share_in_preschool) %>% 
  ggplot(aes(x = share_in_preschool)) +
  geom_density(alpha = 0.15) +
  theme_minimal() +
  ggtitle("Distribution of share prek_attendance, subgroups, by place 2021 (5-year data)") +
  ylab("Density")

```

Look at distribution of prek_attendance share by place for each individual subgroup.

```{r}
metrics_education_sub %>% 
  filter(year == 2016) %>% 
  ggplot(aes(x = share_in_preschool)) +
  geom_density(alpha = 0.15) +
  facet_wrap(~subgroup) +
  labs(
    title = "Distribution of share prek_attendance, subgroups, by place 2021 (5-year data)",
    y = "Density"
  ) +
  theme_minimal()

```

### Time trends

Compare trends for the share in preschool overtime for all years in the data.

```{r}
metrics_education_all %>%
  group_by(statefip, place) %>%
  mutate(share_in_preschool_change = share_in_preschool - lag(share_in_preschool)) %>%
  filter(year == 2016) %>%
  ggplot(aes(share_in_preschool, share_in_preschool_change)) +
  geom_point(alpha = 0.2)

metrics_education_all %>%
  select(year, statefip, place, share_in_preschool) %>%
  pivot_wider(
    names_from = year, 
    values_from = share_in_preschool
  ) %>%
  ggplot(aes(`2014`, `2016`)) +
  geom_abline() +
  geom_point(alpha = 0.1)

```

### Confidence intervals

Check the missingness pattern for confidence intervals.

```{r}
nonmissing <- metrics_education_all |>
  filter(!is.na(share_in_preschool) & !is.na(share_in_preschool_lb) & !is.na(share_in_preschool_ub))

missing <- metrics_education_all |>
  filter(is.na(share_in_preschool) & is.na(share_in_preschool_lb) & is.na(share_in_preschool_ub))

stopifnot(nrow(nonmissing) + nrow(missing) == nrow(metrics_education_all))
```

Check the order. There are three variables and we are interested in pairwise comparisons, we can test that these line up. The upper-bound value should always be greater than the value and the lower-bound value. The value should always be greater than the lower-bound value.

```{r}
# upper bound is always greater than the estimate
stopifnot(all(nonmissing$share_in_preschool_ub > nonmissing$share_in_preschool))

# upper bound is always greater than the lower bound
stopifnot(all(nonmissing$share_in_preschool_ub > nonmissing$share_in_preschool_lb))

# estimate is always greater than the lower bound
stopifnot(all(nonmissing$share_in_preschool > nonmissing$share_in_preschool_lb))
```

Look at confidence intervals.

```{r}
metrics_education_all %>%
  ggplot(aes(share_in_preschool, share_in_preschool_lb)) +
  geom_point(alpha = 0.1) +
  labs(title = "The relationship between the estimate and the lower bound is sensible")

metrics_education_all %>%
  ggplot(aes(share_in_preschool_ub, share_in_preschool)) +
  geom_point(alpha = 0.1) +
  labs(title = "The relationship between the estimate and the upper bound is sensible")

metrics_education_all %>%
  ggplot(aes(share_in_preschool_ub, share_in_preschool_lb)) +
  geom_point(alpha = 0.1) +
  labs(title = "The relationship between the upper bound and the lower bound is sensible")
```

Distribution of confidence interval widths.
```{r}
metrics_education_all %>%
  mutate(ci_width = share_in_preschool_ub - share_in_preschool_lb) %>%
  pull(ci_width) %>%
  summary(na.rm = TRUE)
```

### Quality and suppression
Look at the counts of the quality flag.
```{r}
metrics_education_all %>% 
  select(share_in_preschool_quality) %>% 
  ggplot(aes(x = share_in_preschool_quality)) +
  geom_histogram(color = "blue", fill = alpha("blue", 0.3), binwidth = 1.0) +
  theme_minimal() +
  ggtitle("Quality Flag, All (5-year data)") +
  ylab("Count")

metrics_education_sub %>% 
  filter(subgroup != "All") %>% 
  select(share_in_preschool_quality) %>% 
  ggplot(aes(x = share_in_preschool_quality)) +
  geom_histogram(color = "blue", fill = alpha("blue", 0.3), binwidth = 1.0) +
  theme_minimal() +
  ggtitle("Quality Flag, subgroups (5-year data") +
  ylab("Count")
```

Look at quality by  each individual subgroup.

```{r}
metrics_education_sub %>% 
  filter(subgroup != "All") %>% 
  ggplot(aes(x = share_in_preschool_quality)) +
  geom_histogram(color = "blue", fill = alpha("blue", 0.3), binwidth = 1.0) +
  facet_wrap(~subgroup) +
  ggtitle("Quality Flag, subgroups (5-year data)") +
  ylab("Count")
```


Tabulate share of data suppressed by year.
```{r}

metrics_education_all %>% 
  group_by(year) %>% 
  summarise(suppressed = sum(is.na(share_in_preschool)),
            total = n(),
            suppressed_share = suppressed/total)

metrics_education_sub %>% 
  filter(subgroup != "All") %>% 
  group_by(year, subgroup) %>% 
  summarise(suppressed = sum(is.na(share_in_preschool)),
            total = n(),
            suppressed_share = suppressed/total)

```


## Export 

Rename state.
```{r}
metrics_education_all <- metrics_education_all %>% 
  rename("state" = "statefip")

metrics_education_sub <- metrics_education_sub %>% 
  rename("state" = "statefip")
```

Order the variables how we want.
```{r}
metrics_education_all <- metrics_education_all %>% 
  select(year, state, place, share_in_preschool, 
         share_in_preschool_lb, share_in_preschool_ub, share_in_preschool_quality)

metrics_education_sub <- metrics_education_sub %>% 
  select(year, state, place, subgroup_type, subgroup, share_in_preschool,
         share_in_preschool_lb, share_in_preschool_ub, share_in_preschool_quality) %>%
  arrange(year, state, place, subgroup_type, subgroup)

```

Export as CSV

```{r}
metrics_education_all %>% 
  head(10)

write_csv(metrics_education_all, 
          here::here("08_education", "data", "final", paste0("metrics_preschool_place_all_longitudinal_", acs_year, ".csv")
))

metrics_education_sub %>% 
  head(10)

write_csv(metrics_education_sub, here::here("08_education", "data", "final", paste0("metrics_preschool_place_race-ethnicity_longitudinal_", acs_year, ".csv")))
```


Measure time to render - capture end time and calculate duration.

```{r}
end.time.all <- Sys.time()

round((end.time.all - start.time.all), 3)
```

