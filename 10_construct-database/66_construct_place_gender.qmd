---
title: "Combine Gender place Files"
author: "Aaron R. William, JP Walsh & Manu Alcala"
date: today
format:
  html:
    embed-resources: true
    toc: true
    toc_float: true
execute:
  message: false
  warning: false
editor_options:
  chunk_output_type: console
---

## Setup

```{r quarto-setup, include = FALSE}
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(tidylog)
library(here)
library(assertr)
library(gt)

source(here::here("10_construct-database", "R", "combine_functions.R"))
```

## Construct Database

### Temporary Suppression

There are several variables where the results are unreasonable and we have high doubts about quality. These will be temporarily suppressed for this round.

```{r}
#Suppress places arrests:
#New York City: St fip. 36, Place fip. 51000
#San Jose City: St fip. 06, Place fip. 68000
#Sacramento City: St fip. 06, Place fip. 64000

suppress_values <- c("3651000", "0668000", "0664000")


read_csv(here("07_safety/final/rate_arrests_place_all_subgroup.csv")) %>% 
  mutate(combine_fip = paste0(state, place),
         across(rate_juv_arrest:rate_juv_arrest_quality, ~if_else(combine_fip %in% suppress_values & year != 2023, NA_integer_, .))) %>% 
  select(-combine_fip) %>% 
  write_csv(
    here("data", "temp", "rates_arrest_place_gender.csv")
  )

```


### Data wrangling

```{r}
read_csv(here("08_education/data/built/SEDA_all_subgroups_city_2014-2018.csv")) |>
    filter(subgroup_type %in% c("gender", "all")) |>
    write_csv(here("data", "temp", "SEDA_gender_city.csv"))
```

### gender files

Create population file with a variable for gender.

```{r}

expand_grid(
  read_csv(here("geographic-crosswalks", "data", "place-populations.csv")),
           subgroup = c("All", "Male", "Female")
) %>%
   mutate(subgroup_type = ifelse(subgroup != "All", "gender", "all")) %>%
  select(-population) %>%
  write_csv(here("data", "temp", "place-populations_gender.csv"))

```

Read file paths to all place files with gender subgroup information.

```{r}
# RP: Update commented code when data becomes available
filepaths <- c(

# Race-ethnicity populations
here("data", "temp", "place-populations_gender.csv"),

# 07 safety
here("data", "temp", "rates_arrest_place_gender.csv"),

# 08 education
here("08_education/data/final/metrics_college_place_gender_longitudinal.csv"),
here("data", "temp", "SEDA_gender_city.csv"),

# 09 employment
here("09_employment/data/final/metrics_employment_place_gender_longitudinal.csv")


)

```

This code loads each file and then combines them using `left_join()`. The first file is a population file, so there should be 486 places per year.

```{r}

db_gender <- filepaths |>
  map(
    .f = ~safe_read_csv(.x, geography = "place")
  ) |>
  reduce(left_join, by = c("year", "state", "place", "subgroup", "subgroup_type"))

```

We used old learning rate data, so we rename the variables.

```{r}
db_gender <- db_gender |>
  rename(
    rate_learning = learning_rate,
    rate_learning_lb = learning_rate_lb,
    rate_learning_ub = learning_rate_ub,
    rate_learning_quality = learning_rate_quality
  )
```


### Clean file

Some subgroup information is not available for entire years. To simplify the user experience, remove these years entirely instead of giving a bunch of NAs.

```{r}

years_data <- db_gender %>%
  group_by(year) %>%
  filter_at(vars(-year, -state, -state_name, -place, -place_name, -subgroup_type, -subgroup), any_vars(!is.na(.))) %>%
  group_by(year) %>%
  count() %>%
  select(year) %>%
  pull()

```

Filter for only years that have data available.

```{r}
db_gender  <- db_gender  |>
  filter(year %in% years_data)
```

The quality flags are currently inputed as numbers 1 through 3. Update the data so these are labeled as text: 1="Strong", 2="Marginal", 3="Weak".

```{r}
db_gender  <- db_gender  |>
  mutate(across(ends_with("quality"), ~case_when(. == 1 ~ "Strong",
                                                . == 2 ~ "Marginal",
                                                . == 3 ~ "Weak")))
```

## Quality and Completeness

### Dimensions

At most there should be 1,458 in a year (3X486) and at the least there should be 1,455 in a year (3X485).

```{r}

db_gender |>
  count(year) |>
  assert(
    within_bounds(1455, 1458),
    n
  )
```

### Data Quality Flags

This section summarizes data quality flags for variables and years.

```{r}
db_gender |>
  filter(subgroup != "All") |>
  select(ends_with("_quality")) |>
  pivot_longer(everything(), names_to = "variable", values_to = "quality") |>
  count(variable, quality) |>
  filter(!is.na(quality)) |>
  print(n = 100)

db_gender  |>
  filter(subgroup != "All") |>
  select(year, ends_with("_quality")) |>
  pivot_longer(-year, names_to = "variable", values_to = "quality") |>
  count(year, quality) |>
  print(n = 100)

```

### Full Database

Evaluate the quality variables.

```{r}
db_gender |>
  select(ends_with("_quality")) |>
  assert(in_set("Strong", "Marginal", "Weak"), everything())

```



### 07 Safety

```{r}

db_gender |>
  assert(
    within_bounds(0, Inf),
    rate_juv_arrest
  ) |>
  quiet()

```

### 08 Education

```{r}

db_gender |>
  assert(
    within_bounds(0, 1),
    share_hs_degree,
    share_hs_degree_lb,
    share_hs_degree_ub
  ) |>
  assert(
    within_bounds(-10, 10),
    rate_learning,
    rate_learning_lb,
    rate_learning_ub
  ) |>
  quiet()

test_bounds(
  data = db_gender,
  estimate = share_hs_degree,
  lb = share_hs_degree_lb,
  ub = share_hs_degree_ub
)
```

### 09 Employment

```{r}
db_gender |>
  assert(
    within_bounds(0, 1),
    share_employed,
    share_employed_lb,
    share_employed_ub
  ) |>
  quiet()

test_bounds(
  data = db_gender,
  estimate = share_employed,
  lb = share_employed_lb,
  ub = share_employed_ub
)

```

## Write the File

```{r}

write_csv(db_gender, here("data", "66_mobility-metrics_place_gender_longitudinal.csv"))
```

## Delete temp files

Delete the created temp files

```{r}
tempfiles <- c(
  
# 08 education
here("data", "temp", "SEDA_gender_city.csv"),

# Safety
here("data", "temp", "rates_arrest_place_gender.csv")

)

file.remove(tempfiles)
```
