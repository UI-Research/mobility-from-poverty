---
title: "Calculate Medians for Dashboard - Longitudinal"
author: "Judah Axelrod and Aaron R. Williams, Updated by Kassandra Martinchek"
date: today
format:
  html:
    df-print: kable
    toc: true
    toc_float: true
    embed-resources: true
    code-fold: true
    grid:
      body-width: 1200px
execute: 
  warning: false
editor_options: 
  chunk_output_type: console
---

# Mobility metrics median calculations

This code calculates weighted medians of the mobility metrics at the county level.

We exclude missing values and calculate the proportion of places and proportion of population missing for each metric. The function below is used to calculate the proportion of population missing for each metric.

```{r}
missing_share <- function(x, weight) {
  
  sum(as.numeric(is.na(x)) * weight) / sum(weight)
  
}

```


The steps taken for calculating the median estimates are as follow:

-   Calculate the population-weighted median
-   Calculate the proportion of counties that are missing
-   Calculate the proportion of people that are missing

# County level

## Load Packages

```{r}
#| label: load-packages

options(scipen = 999)

library(tidyverse)
library(here)
library(tidycensus)
library(kableExtra)

```

## Load Data

```{r}
#| label: load-data
metrics <- read_csv(here("data", "11_mobility-metrics_county_longitudinal.csv")) |>
  select(-ends_with("_lb"), -ends_with("_ub")) |> 
  filter(year != 2014)

```

## Calculate Medians

We calculate weighted medians for each numeric variable. This means our estimates represent the county mobility metric for the average American. Note that 2014 is excluded because we don't have population data for that year.


```{r}
# Remove missing variable-year combos 
safe_wtd_quantile <- possibly(Hmisc::wtd.quantile, otherwise = NA)

weighted_median <- metrics |>
  select(where(is.numeric) & (!ends_with('quality'))) |> 
  summarize(
    across(
      .cols = -population, 
      .fns = ~safe_wtd_quantile(., weights = population, probs = 0.5, na.rm = TRUE)
    ), .by = 'year'
  ) |>
  pivot_longer(cols = -year, values_to = "weighted_median")

state_count <- metrics |> 
    mutate(across(ends_with("quality"), ~case_when(. == "Strong" ~ 1,
                                                 . == "Marginal" ~ 2,
                                                 . == "Weak" ~ 3))) |>
  pivot_longer(cols = ends_with('_quality'), names_to = 'qual_varname', values_to = 'quality') |> 
  filter(quality %in% 1:2) |> 
  count(state_name, year, qual_varname) |> 
  count(qual_varname, year, name = 'n_states')
 
proportion_by_qual <- metrics |>
  mutate(across(ends_with("quality"), ~case_when(. == "Strong" ~ 1,
                                                 . == "Marginal" ~ 2,
                                                 . == "Weak" ~ 3))) |>
  select(where(is.numeric)) |>
  pivot_longer(cols = ends_with('_quality'), names_to = 'qual_varname', values_to = 'quality') |> 
  summarize(population = sum(population),
   .by = c('year', 'qual_varname', 'quality')
  ) |> 
  mutate(pop_share = population / sum(population), .by = c('year', 'qual_varname')) |> 
  filter(quality %in% 2:3) |> 
  select(-population) |> 
  arrange(qual_varname, quality)


missing_population <- metrics |>
  select(where(is.numeric) & (!ends_with('quality'))) |>
  summarize(
    across(
      .cols = -population, 
      .fns = ~missing_share(.x, weight = population)
    ), .by='year') |> 
  pivot_longer(cols = -year, values_to = "missing_population")
 
missing_county <- metrics |>
  select(where(is.numeric) & (!ends_with('quality'))) |>
  summarize(
    across(
      .cols = -population, 
      .fns = ~sum(is.na(.x)) / n()
    ), .by = 'year') |> 
  pivot_longer(cols = -year, values_to = "missing_county")
  
low_pctle <- metrics |>
  select(where(is.numeric) & (!ends_with('quality'))) |> 
  summarize(
    across(
      .cols = -population, 
      .fns = ~safe_wtd_quantile(., weights = population, probs = 0.05, na.rm = TRUE)
    ), .by = 'year'
  ) |>
  pivot_longer(cols = -year, values_to = "low_pctle")

high_pctle <- metrics |>
  select(where(is.numeric) & (!ends_with('quality'))) |> 
  summarize(
    across(
      .cols = -population, 
      .fns = ~safe_wtd_quantile(., weights = population, probs = 0.95, na.rm = TRUE)
    ), .by = 'year'
  ) |>
  pivot_longer(cols = -year, values_to = "high_pctle")

weighted_med_table <- weighted_median |> 
  full_join(low_pctle, by = c("year", "name")) |>
  full_join(high_pctle, by = c("year", "name")) |>  
  full_join(missing_population, by = c("year", "name")) |>
  full_join(missing_county, by = c("year", "name")) |>
  mutate(qual_varname = paste0(name, '_quality')) |>
  left_join(proportion_by_qual, by = c("year", "qual_varname")) |>  #M:M Merge is expected behavior here 
  left_join(state_count, by = c("year", "qual_varname")) |> 
  pivot_wider(names_from = quality, names_glue = 'quality{quality}_popshare', values_from = pop_share) |> 
  select(-qual_varname, -qualityNA_popshare) |> 
  mutate(across(where(is.numeric), ~round(.,digits=2))) |> 
  rowwise() |> 
  # Share of pop that is either missing or quality = 3 for that metric
  mutate(share_lq3 = sum(missing_population, quality3_popshare, na.rm = TRUE)) |> 
  # Remove all-missing metric-years
  filter(missing_county < 1 & name != 'population') |> 
  ungroup()

# don't show the data that is not most recent year
#weighted_med_table |> 
 # kbl() |> 
  #kable_styling(font_size = 10, fixed_thead = TRUE)
```


```{r}

recent_year_data <- weighted_med_table |>
  group_by(name) |>
  summarize(recent_year = max(year)) 

metrics_long <- left_join(x = weighted_med_table,
                          y = recent_year_data,
                          by = "name")

metrics_long_recent <- metrics_long |>
  filter(year == recent_year)

# because suppress later and show it, don't show it here  
#metrics_long_recent |> 
 # kbl() |> 
  #kable_styling(font_size = 10, fixed_thead = TRUE)

```

```{r plot-lq3-by-varyear}
metrics_long_recent |>
  mutate(year = as.factor(year)) |> 
  ggplot(aes(x=share_lq3, y=name, color=year)) +
  geom_point(alpha = 0.7) + 
  geom_jitter() +
  geom_vline(xintercept=0.1, linetype='dashed') +
  labs(
    title = "County Medians Quality",
    x = "Share NA or Quality==3",
    y = NULL
  )
```

```{r suppression}
metrics_recent_suppressed <- metrics_long_recent |> 
  mutate(weighted_median = ifelse(share_lq3 > 0.15, NA, weighted_median),
         high_pctle = ifelse(share_lq3 > 0.15, NA, high_pctle),
         low_pctle = ifelse(share_lq3 > 0.15, NA,low_pctle)) |> 
  select(year, name, weighted_median, low_pctle, high_pctle, share_lq3) 

metrics_recent_suppressed |> 
  kbl() |> 
  kable_styling(font_size = 10, fixed_thead = TRUE)

metrics_recent_suppressed |>
  write_csv(here("10_construct-database", "county_medians_recent_suppressed.csv"))
```