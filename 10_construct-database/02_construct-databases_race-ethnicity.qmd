---
title: ""
author: ""
date: "`r format(Sys.time(), '%d %B, %Y')`"
format:
  html:
    code-fold: true
    css: 10_construct-database/www/web_report.css
    toc: true
    toc_float: true
editor_options: 
  chunk_output_type: console
---

<style>
@import url('https://fonts.googleapis.com/css?family=Lato&display=swap');
</style>

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato" />

```{r rmarkdown-setup, include = FALSE}
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(here)
library(assertr)
library(gt)

```

```{r}
# read_csv(here("08_education", "SEDA_all_subgroups.csv")) %>%
#   filter(subgroup_type %in% c("all", "race-ethnicity")) %>%
#   filter(year == 2015) %>%
#   write_csv(here("08_education", "SEDA_race-ethnicity.csv"))

```

```{r, combine-neonatal-health}
neonatal_2018 <- read_csv(
  here("04_health", "final_data", "neonatal_health_subgroup_2018.csv")
  )
neonatal_2020 <- read_csv(
  here("04_health", "final_data", "neonatal_health_subgroup_2020.csv")
  )
neonatal <- rbind(neonatal_2018, neonatal_2020) %>%
  rename_with(~ gsub("lbw", "rate_low_birth_weight", .x, fixed = TRUE))
write_csv(neonatal, 
          here::here("04_health", "final_data", "neonatal_health_subgroup_CORRECT.csv")
          )
rm(neonatal, neonatal_2018, neonatal_2020)
```



Add the "all" data to the subgroup data. 

```{r}
fix_files <- c(
  here("01_financial-well-being", "metrics_income.csv"),
  here("08_education", "metrics_college.csv"),
  here("08_education", "metrics_preschool.csv"),
  here("09_employment", "metrics_employment.csv")
)

wrong_files <- c(
  here("01_financial-well-being", "metrics_income_subgroup.csv"),
  here("08_education", "metrics_college_subgroup.csv"),  
  here("08_education", "metrics_preschool_subgroup.csv"),
  here("09_employment", "metrics_employment_subgroup.csv")
)

add_all <- function(all, subgroup) {
  
  # read all
  all_csv <- read_csv(all, guess_max = 5000) %>%
    mutate(subgroup_type = "all",
           subgroup = "All")
  
  # read subgroup
  subgroup_csv <- read_csv(subgroup, guess_max = 5000) %>%
    filter(subgroup_type != "all")
  
  # replace all with bind_rows
  fixed_csv <- bind_rows(subgroup_csv, all_csv) %>%
    arrange(year, state, county, subgroup_type, subgroup)

  # write
  write_csv(fixed_csv, subgroup)
  
}

map2(fix_files, wrong_files, ~add_all(all = .x, subgroup = .y))

```

```{r}
files <- c(
  
  ### EDUCATION ###
  here("08_education", "metrics_preschool_subgroup.csv"),
  here("08_education", "metrics_college_subgroup.csv"),
  here("08_education", "SEDA_all_subgroups_county.csv"),
  
  ### FINANCIAL WELLBEING ###
  here("01_financial-well-being", "metrics_income_subgroup.csv"),

  ### HEALTH ###
  here("04_health", "final_data", "neonatal_health_subgroup_CORRECT.csv"),

  ### HOUSING ###
  
  ### NEIGHBORHOODS ### 
  here("06_neighborhoods", "poverty-exposure", "poverty-exposure_race-ethnicity.csv"),
  
  ### SAFETY ###
  
  ### WORK ### 
  here("09_employment", "metrics_employment_subgroup.csv")
)

```

# Multi-year Database

```{r}
read_csv_and_clean <- function(file) {
  
  read_csv(file, guess_max = 5000) %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           county = stringr::str_pad(county, width = 3, pad = "0")) %>%
    mutate(subgroup_type = str_replace(subgroup_type, "Race-ethnicity", "race-ethnicity")) %>%
    mutate(subgroup = str_replace(subgroup, "Other Races and Eth$", "Other Races and Ethnicities")) %>%
    mutate(subgroup = str_replace(subgroup, "White, Non Hispanic", "White, Non-Hispanic")) %>%
    mutate(subgroup = str_replace(subgroup, "Black, Non Hispanic", "Black, Non-Hispanic"))
  
}

db <- map(files, read_csv_and_clean) %>%
  reduce(full_join, by = c("year", "state", "county", "subgroup_type", "subgroup"))

# fix non-missing quality flags
db <- db %>%
  mutate(
    pctl_quality = if_else(is.na(pctl_20), as.numeric(NA), pctl_quality),
    # famstruc_quality = if_else(is.na(famstruc_2par_married), as.numeric(NA), famstruc_quality),
    hs_degree_quality = if_else(is.na(share_hs_degree), as.numeric(NA), hs_degree_quality),
    preschool_quality = if_else(is.na(share_in_preschool), as.numeric(NA), preschool_quality),
    employed_quality = if_else(is.na(share_employed), as.numeric(NA), employed_quality)
  )

frame <- 
  bind_rows(
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "tract-county-crosswalk_2020.csv"), guess_max = 5000),
      subgroup_type = c("all"),
      subgroup = c("All")
    ),
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "tract-county-crosswalk_2020.csv"), guess_max = 5000),
      subgroup_type = c("race-ethnicity"),
      subgroup = c("Black, Non-Hispanic", "Hispanic", "Other Races and Ethnicities", "White, Non-Hispanic")
    )
  ) %>%
  arrange(year, state, county, subgroup_type, subgroup)
  
db <- full_join(frame, db, by = c("year", "state", "county", "subgroup_type", "subgroup"))

stopifnot(
  nrow(db) == nrow(frame)
)

```

# Recent-year Database

```{r}
read_csv_recent <- function(file) {
  
  file <- read_csv(file, guess_max = 5000)  %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           county = stringr::str_pad(county, width = 3, pad = "0")) %>%
    mutate(subgroup_type = str_replace(subgroup_type, "Race-ethnicity", "race-ethnicity")) %>%
    mutate(subgroup = str_replace(subgroup, "Other Races and Eth$", "Other Races and Ethnicities")) %>%
    mutate(subgroup = str_replace(subgroup, "White, Non Hispanic", "White, Non-Hispanic")) %>%
    mutate(subgroup = str_replace(subgroup, "Black, Non Hispanic", "Black, Non-Hispanic")) %>%
    filter(year == max(year)) %>%
    select(-year)
  
  return(file)
  
}

# construct multiyear database
db_recent <- map(files, read_csv_recent) %>%
  reduce(full_join, by = c("state", "county", "subgroup_type", "subgroup"))

# fix non-missing quality flags
db_recent <- db_recent %>%
  mutate(
    pctl_quality = if_else(is.na(pctl_20), as.numeric(NA), pctl_quality),
    famstruc_quality = if_else(is.na(famstruc_2par_married), as.numeric(NA), famstruc_quality),
    hs_degree_quality = if_else(is.na(share_hs_degree), as.numeric(NA), hs_degree_quality),
    preschool_quality = if_else(is.na(share_in_preschool), as.numeric(NA), preschool_quality),
    employed_quality = if_else(is.na(share_employed), as.numeric(NA), employed_quality)
  )

frame <- 
  bind_rows(
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "county-file.csv"), guess_max = 5000),
      subgroup_type = c("all"),
      subgroup = c("All")
    ),
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "county-file.csv"), guess_max = 5000),
      subgroup_type = c("race-ethnicity"),
      subgroup = c("Black, Non-Hispanic", "Hispanic", "Other Races and Ethnicities", "White, Non-Hispanic")
    )
  ) %>%
  arrange(year, state, county, subgroup_type, subgroup) %>%
  filter(year == max(year)) %>%
  select(-year)

db_recent <- full_join(frame, db_recent, by = c("state", "county", "subgroup_type", "subgroup"))

stopifnot(nrow(frame) == nrow(db_recent)) #todo(aaron): resolve

```

## Quality and Completeness

### Full Database

missing metrics
metrics rated 1
metrics rated 2
metrics rated 3

```{r}
db %>%
  select(ends_with("_quality")) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality)

```

### Recent Database

```{r}
db_recent %>%
  select(ends_with("_quality")) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality) %>%
  gt()

```

## Test

### Full Database

```{r}
db_values <- db %>%
  select(-ends_with("_quality"), -ends_with("_ub"), -ends_with("_lb"))

db_quality <- db %>%
  select(ends_with("_quality"))

db_bounds <- db %>%
  select(ends_with("_ub"), ends_with("_lb"))

```

```{r}
db_values %>%
  assert(within_bounds(0, Inf), pctl_20, pctl_50, pctl_80) %>%
  assert(within_bounds(0, 1), starts_with("famstruc_")) %>%
  assert(within_bounds(0, 1), lbw) %>%
  assert(within_bounds(-1, 10), learning_rate) %>%
  assert(within_bounds(0, 1), starts_with("share_"))

```

Test confidence interval bounds. 

```{r}
 db %>%
  verify(is.na(lbw) | lbw_lb < lbw) %>%
  verify(is.na(lbw) | lbw_lb < lbw_ub) %>%
  verify(is.na(lbw) | lbw < lbw_ub) %>%
  verify(is.na(learning_rate) | learning_rate_lb < learning_rate) %>%
  verify(is.na(learning_rate) | learning_rate_lb < learning_rate_ub) %>%
  verify(is.na(learning_rate) | learning_rate < learning_rate_ub)

```

```{r}

db_quality %>%
  assert(in_set(1, 2, 3), everything())

```

### Recent Database

```{r}




```

## Write the File

```{r}
write_csv(db_recent, here("data", "02_mobility-metrics_race-ethnicity.csv"))

```
