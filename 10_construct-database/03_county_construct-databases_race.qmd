---
title: ""
author: ""
date: "`r format(Sys.time(), '%d %B, %Y')`"
format:
  html:
    embed-resources: true
    code-fold: true
    css: 10_construct-database/www/web_report.css
    toc: true
    toc_float: true
editor_options: 
  chunk_output_type: console
---

```{r rmarkdown-setup, include = FALSE}
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(here)
library(assertr)
library(gt)

```

```{r combine-poverty-exposure}
concatenate_files <- function(files){
  lapply(files, read_csv) %>%
    bind_rows()
}

concatenate_files(
  c(
    here("06_neighborhoods", "poverty-exposure", "poverty-exposure_race-ethnicity_county_2018.csv"),
    here("06_neighborhoods", "poverty-exposure", "poverty-exposure_race-ethnicity_county_2021.csv")
  )
) %>%
  write_csv(
    here("data", "temp", "poverty-exposure_race-ethnicity_county.csv")
  )

read_csv(here("07_safety", "modified data", "2021_juv_arrest_rate_county_subgroup.csv")) %>%
  select(-core_reporting, -agencies_reporting) %>%
  mutate(
    subgroup = case_match(
      subgroup,
      "all" ~ "All",
      "white" ~ "White",
      "black" ~ "Black",
      "hispanic" ~ "Hispanic",
      "asian_other" ~ "Other Races and Ethnicities"
    )
  ) %>%
  mutate(subgroup_type = if_else(subgroup == "All", "all", subgroup_type)) %>%
  rename(
    rate_juv_arrest = juv_arrest_rate,
    rate_juv_arrest_quality = juv_arrest_rate_quality
  ) %>%
  write_csv(here("data", "temp", "2021_juv_arrest_rate_county_subgroup.csv"))

```


Add the "all" data to the subgroup data. 

<!-- ```{r} -->
<!-- fix_files <- c( -->
<!--   here("01_financial-well-being", "metrics_income.csv"), -->
<!--   here("08_education", "metrics_college.csv"), -->
<!--   here("08_education", "metrics_preschool.csv"), -->
<!--   here("09_employment", "metrics_employment.csv") -->
<!-- ) -->

<!-- wrong_files <- c( -->
<!--   here("01_financial-well-being", "metrics_income_subgroup.csv"), -->
<!--   here("08_education", "metrics_college_subgroup.csv"),   -->
<!--   here("08_education", "metrics_preschool_subgroup.csv"), -->
<!--   here("09_employment", "metrics_employment_subgroup.csv") -->
<!-- ) -->

<!-- add_all <- function(all, subgroup) { -->

<!--   # read all -->
<!--   all_csv <- read_csv(all, guess_max = 5000) %>% -->
<!--     mutate(subgroup_type = "all", -->
<!--            subgroup = "All") -->

<!--   # read subgroup -->
<!--   subgroup_csv <- read_csv(subgroup, guess_max = 5000) %>% -->
<!--     filter(subgroup_type != "all") -->

<!--   # replace all with bind_rows -->
<!--   fixed_csv <- bind_rows(subgroup_csv, all_csv) %>% -->
<!--     arrange(year, state, county, subgroup_type, subgroup) -->

<!--   # write -->
<!--   write_csv(fixed_csv, subgroup) -->

<!-- } -->

<!-- map2(fix_files, wrong_files, ~add_all(all = .x, subgroup = .y)) -->

<!-- ``` -->

```{r}
files <- c(
  
  ### EDUCATION ###
  here("08_education", "digital_access_county_subgroup_2021.csv"),
  
  ### FINANCIAL WELLBEING ###

  ### HEALTH ###

  ### HOUSING ###
  
  ### NEIGHBORHOODS ### 
  
  #GM: While nominally race-ethnicity, this dataset does not break out Black by Non-Hispanic
  #     commenting out here until we get the updated version (this one throws off the subgroup categories)
  
  ### SAFETY ###
  here("data", "temp", "2021_juv_arrest_rate_county_subgroup.csv")
  
  ### WORK ### 
)

```

# Multi-year Database

```{r}
read_csv_and_clean <- function(file) {
  print(file)
  
  read_csv(file, guess_max = 5000) %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           county = stringr::str_pad(county, width = 3, pad = "0")) %>%
    mutate(subgroup_type = str_replace(subgroup_type, "Race-ethnicity", "race-ethnicity")) %>%
    mutate(subgroup = str_replace(subgroup, "Other Races and Eth$", "Other Races and Ethnicities")) %>%
    mutate(subgroup = str_replace(subgroup, "White, Non Hispanic", "White, Non-Hispanic")) %>%
    mutate(subgroup = str_replace(subgroup, "Black, Non Hispanic", "Black, Non-Hispanic"))
  
}

db <- map(files, read_csv_and_clean) %>%
  reduce(full_join, by = c("year", "state", "county", "subgroup_type", "subgroup"))

# fix non-missing quality flags
db <- db %>%
  #remove non-race and ethnicity related subgroups:
  filter(subgroup_type == "race-ethnicity" | subgroup_type == "all")

```


```{r}
#GM note: shape here a moving target:
# In theory we should have number of years * number of race-ethnic groups * number of counties 
# This is not the case because we are missing other data from our rate-learning data which
# constitute much of the non-2018 and 2020 data

frame <-
  bind_rows(
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "county-populations.csv"), guess_max = Inf) %>%
        filter(year == 2020) %>%
        select(-year),
      year = 2013:2022,
      subgroup_type = c("all"),
      subgroup = c("All")
    ),
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "county-populations.csv"), guess_max = Inf) %>%
        filter(year == 2020) %>%
        select(-year),
      year = 2013:2022,
      subgroup_type = c("race-ethnicity"),
      subgroup = c("Black", "Hispanic", "Other Races and Ethnicities", "White")
    )
  ) %>%
  arrange(year, state, county, subgroup_type, subgroup)

db <- full_join(frame, db, by = c("year", "state", "county", "subgroup_type", "subgroup"))

stopifnot(
  nrow(db) == nrow(frame)
)

```

```{r clean-data}
#' Function to clean db, largely by updating names
#' @param db_unclean (data.frame) dataframe joined by map reduce logic above
#' @return db (data.frame) the cleaned dataframe


clean_data <- function(db_unclean){
  db <- db_unclean %>%
    rename(share_digital_access = digital_access,
           share_digital_access_quality = digital_access_quality
           ) %>%
    select(-any_of(c("age_1017")))
  return(db)
  
}

db <- clean_data(db)
```





# Recent-year Database

```{r}
read_csv_recent <- function(file) {
  
  file <- read_csv(file, guess_max = 5000)  %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           county = stringr::str_pad(county, width = 3, pad = "0")) %>%
    mutate(subgroup_type = str_replace(subgroup_type, "Race-ethnicity", "race-ethnicity")) %>%
    mutate(subgroup = str_replace(subgroup, "Other Races and Eth$", "Other Races and Ethnicities")) %>%
    mutate(subgroup = str_replace(subgroup, "White, Non Hispanic", "White, Non-Hispanic")) %>%
    mutate(subgroup = str_replace(subgroup, "Black, Non Hispanic", "Black, Non-Hispanic")) %>%
    slice_max(year) %>% 
    select(-year)
  
  return(file)
  
}

# construct database
db_recent <- map(files, read_csv_recent) %>%
  reduce(full_join, by = c("state", "county", "subgroup_type", "subgroup")) %>%
  #get rid of non race/ethnicity groups:
  filter(subgroup_type == "race-ethnicity" | subgroup_type == "all") %>%
  clean_data()


frame <-
  bind_rows(
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "county-populations.csv"), guess_max = 5000),
      subgroup_type = c("all"),
      subgroup = c("All"),
    ),
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "county-populations.csv"), guess_max = 5000),
      subgroup_type = c("race-ethnicity"),
      subgroup = c("Black", "Hispanic", "Other Races and Ethnicities", "White"),

    )
  ) %>%
  arrange(year, state, county, subgroup_type, subgroup) %>%
  filter(year == max(year)) %>%
  select(-year)

db_recent <- tidylog::full_join(frame, db_recent, by = c("state", "county", "subgroup_type", "subgroup"))

stopifnot(nrow(frame) == nrow(db_recent)) 

```

## Quality and Completeness

### Full Database

missing metrics
metrics rated 1
metrics rated 2
metrics rated 3

```{r}
db %>%
  select(ends_with("_quality")) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality)

```

### Recent Database

```{r}
db_recent %>%
  select(ends_with("_quality")) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality) %>%
  gt()

```

## Test

### Full Database

```{r}
db_values <- db %>%
  select(-ends_with("_quality"), -ends_with("_ub"), -ends_with("_lb"))

db_quality <- db %>%
  select(ends_with("_quality"))

db_bounds <- db %>%
  select(ends_with("_ub"), ends_with("_lb"))

```

```{r}
db_values %>%
  assert(within_bounds(0, Inf), rate_juv_arrest) %>%
  assert(within_bounds(0, 1), starts_with("share_"))

```

Test confidence interval bounds. 

```{r}

db_quality %>%
  assert(in_set(1, 2, 3), everything())

```

```{r add-labels}

county_pop <- read_csv(here("geographic-crosswalks", "data", "county-populations.csv")) %>%
  select(state, county, state_name, county_name) %>%
  distinct()

db <- db %>%
  tidylog::left_join(county_pop) %>%
  relocate(year, state, county, state_name, county_name)
  
db_recent <- db_recent %>%
  tidylog::left_join(county_pop) %>%
  relocate(state, county, state_name, county_name)
  

```


## Write the File

```{r}
#write_csv(db_recent, here("data", "01_mobility-metrics_race-ethnicity_recent.csv"))
write_csv(db, here("data", "02_mobility-metrics_race_longitudinal.csv"))
```

```{r}
pov_exposure <- 
  read_csv(here("06_neighborhoods", "poverty-exposure", "poverty-exposure_race-ethnicity_county.csv")) %>%
    left_join(county_pop, by = c("state", "county")) %>%
    rename(
      share_poverty_exposure = poverty_exposure,
      share_poverty_exposure_quality = poverty_exposure_quality
    ) %>%
    write_csv(here("data", "02_poverty-exposure_race-ethnicity.csv"))


```

