---
title: "099_test_county_independent_city"
author: "JP Walsh"
date: today
format:
  html:
    toc: true
    toc_float: true
    embed-resources: true
    code-fold: true
execute: 
  warning: false
editor_options: 
  chunk_output_type: console
---

## Quarto

Independent places have the same boundaries as counties and these serve as a good test for comparing the metric results. For ACS statistics, pull results from independent places and their matching counties to test if the final statistic is the same.

## House keeping

```{r}
library(tidyverse)
library(tidylog)
library(here)
library(assertr)
library(gt)
library(reactable)

options(scipen = 999)
```


```{r}
fips <- tribble(
  ~state, ~place,   ~county,
  "24", "04000", "510",
  "29", "65000", "510",
  "51", "01000", "510",
  "51", "16000", "550",
  "51", "35000", "650",
  "51", "47672", "680",
  "51", "56000", "700",
  "51", "57000", "710",
  "51", "64000", "740",
  "51", "67000", "760",
  "51", "68000", "770",
  "51", "76432", "800",
  "51", "82000", "810"
)

compare_wide <- function(counties, places, .year, .variable, .subgroup = NULL) {
  
  if (is.null(.subgroup)) {
    
    vars <- c("state", "county", "year")
    
  } else {
    
    vars <- c(c("state", "county", "year"), .subgroup)
    
  }
  
  left_join(
    counties |>
      dplyr::filter(.data$year %in% .year) |>
      dplyr::select(all_of(vars), {{ .variable }}) |>
      dplyr::mutate(county_temp_value = {{ .variable }}),
    places |>
      filter(.data$year %in% .year) |>
      select(all_of(vars), {{ .variable }}) |>
      dplyr::mutate(place_temp_value = {{ .variable }}),
    by = vars,
    suffix = c("_c", "_p")
  ) |>
    mutate(
      error = round(county_temp_value - place_temp_value, digits = 3),
      equal = county_temp_value == place_temp_value
    ) |>
    select(-county_temp_value, -place_temp_value)
  
}
```


## Combined files       

Read the overall files and race-ethnciity subgroup files.
```{r}

counties <- read_csv(here("data", "11_mobility-metrics_county_longitudinal.csv")) |>
  filter(paste0(state, county) %in% paste0(fips$state, fips$county))

places <- read_csv(here("data", "61_mobility-metrics_place_longitudinal.csv")) |>
  filter(paste0(state, place) %in% paste0(fips$state, fips$place)) |>
  inner_join(fips, by = c("state", "place")) |>
  select(year, state, place, county, everything())

counties_race <- read_csv(here("data", "12_mobility-metrics_county_race-ethnicity_longitudinal.csv")) |>
  filter(paste0(state, county) %in% paste0(fips$state, fips$county))

places_race <- read_csv(here("data", "62_mobility-metrics_place_race-ethnicity_longitudinal.csv")) |>
  filter(paste0(state, place) %in% paste0(fips$state, fips$place)) |>
  inner_join(fips, by = c("state", "place")) |>
  select(year, state, place, county, everything())

```

### Financial well-being

```{r}

compare_wide(counties, places, .year = 2021, .variable = share_debt_coll) %>% 
  reactable()

compare_wide(counties_race, places_race, .year = 2021, .variable = pctl_income_80, .subgroup = "subgroup") %>% 
  filter(!is.na(equal)) %>% 
  reactable()


```

### Housing 

```{r}

compare_wide(counties_race, places_race, .year = 2021, .variable = count_homeless, .subgroup = "subgroup") %>% 
  filter(!is.na(equal))%>% 
  reactable()
compare_wide(counties, places, .year = 2021, .variable = share_affordable_available_30_ami)%>% 
  reactable()
compare_wide(counties, places, .year = 2021, .variable = share_affordable_80_ami)%>% 
  reactable()

```

### local-governance

```{r}

compare_wide(counties, places, .year = 2021, .variable = share_desc_rep_other)%>% 
  reactable()
compare_wide(counties, places, .year = 2020, .variable = share_election_turnout)%>% 
  reactable()
```

### 06 neighborhoods

```{r}

compare_wide(counties, places, .year = 2021, .variable = share_black_nh_exposure)%>% 
  reactable()
compare_wide(counties_race %>% 
               rename(share_poverty_exposure =poverty_exposure), 
             places_race, .year = 2021, .variable = share_poverty_exposure, .subgroup = "subgroup") %>% 
  filter(!is.na(equal))%>% 
  reactable()
compare_wide(counties, places, .year = 2021, .variable = count_membership_associations_per_10k)%>% 
  reactable()
compare_wide(counties, places, .year = 2019, .variable = index_air_hazard)%>% 
  reactable()
compare_wide(counties, places, .year = 2019, .variable = index_transit_trips)%>% 
  reactable()
compare_wide(counties, places, .year = 2019, .variable = index_transportation_cost)%>% 
  reactable()

```

### 07 safety

```{r}
compare_wide(counties, places, .year = 2021, .variable = rate_crime_violent)%>% 
  reactable()
compare_wide(counties_race, places_race, .year = 2021, .variable = rate_juv_arrest, .subgroup = "subgroup") %>% 
  filter(!is.na(equal))%>% 
  reactable()
```

### 08 education

```{r}

compare_wide(counties_race, places_race, .year = 2021, .variable = share_in_preschool, .subgroup = "subgroup") %>% 
  filter(!is.na(share_in_preschool_c))%>% 
  reactable()
compare_wide(counties_race, places_race, .year = 2017, .variable = rate_learning, .subgroup = "subgroup") %>% 
  filter(!is.na(equal))%>% 
  reactable()
compare_wide(counties, places, .year = 2020, .variable = share_meps20_black)%>% 
  reactable()
compare_wide(counties_race, places_race, .year = 2021, .variable = share_hs_degree, .subgroup = "subgroup") %>% 
  filter(!is.na(equal))%>% 
  reactable()
compare_wide(counties_race, places_race, .year = 2021, .variable = share_digital_access, .subgroup = "subgroup") %>% 
  filter(!is.na(equal))%>% 
  reactable()

```

### 09 employment

```{r}
compare_wide(counties_race, places_race, .year = 2021, .variable = share_employed, .subgroup = "subgroup") %>% 
  filter(!is.na(equal))%>% 
  reactable()
```

