---
title: ""
author: ""
date: "`r format(Sys.time(), '%d %B, %Y')`"
format:
  html:
    code-fold: true
    css: 10_construct-database/www/web_report.css
    toc: true
    toc_float: true
editor_options: 
  chunk_output_type: console
---

<style>
@import url('https://fonts.googleapis.com/css?family=Lato&display=swap');
</style>

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato" />

```{r, include = FALSE}
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(here)
library(assertr)
library(gt)

```

```{r}
read_csv(here("01_financial-well-being", "share_debt_2018_long.csv"), guess_max = 5000) %>%
  select(-county_name) %>%
  mutate(subgroup_type = if_else(subgroup == "All", "all", subgroup_type)) %>%
  mutate(subgroup = 
           case_when(
             subgroup == "Majority white" ~ "Majority White, Non-Hispanic",
             subgroup == "Majority non-white" ~ "Majority Non-White",
             TRUE ~ subgroup
           )
  ) %>%
  arrange(year, state, county, subgroup_type, subgroup) %>%
  mutate(share_debt_coll_quality = if_else(is.na(share_debt_coll), true = as.numeric(NA), false = share_debt_coll_quality)) %>%  
  write_csv(here("01_financial-well-being", "share_debt_race-ethnicity.csv"))

```

```{r}
#these are same for update as of 2023-04-03 (GM)
files <- c(
  here("01_financial-well-being", "share_debt_race-ethnicity.csv"),
  here("06_neighborhoods", "transportation", "output", "county_transport_stats_by_race_final.csv"),
  here("06_neighborhoods", 
       "environment", 
       "data", 
       "output", 
       "environment_county_sub_all.csv")
  )

```

# Multi-year Database

```{r}
read_csv_and_clean <- function(file) {
  
  read_csv(file, guess_max = 5000) %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           county = stringr::str_pad(county, width = 3, pad = "0")) %>%
    filter(subgroup_type %in% c("all", "race-ethnicity")) %>%
    mutate(
      subgroup = case_when(
        subgroup == "All" ~ "All",
        subgroup == "Predominantly People of Color" ~ "Majority Non-White", 
        subgroup == "No Predominant Racial Group" ~ "Mixed Race and Ethnicity",
        subgroup == "Predominantly White" ~ "Majority White, Non-Hispanic",
        subgroup == "No Majority Race/Ethnicity" ~ "Mixed Race and Ethnicity", 
        TRUE ~ subgroup
      )
    )
}

db <- map(files, read_csv_and_clean) %>%
  reduce(full_join, by = c("year", "state", "county", "subgroup_type", "subgroup")) %>%
  mutate(subgroup_type = str_to_lower(subgroup_type))

xwalk_18 <- read_csv(here("geographic-crosswalks", 
                          "data", 
                          "tract-county-crosswalk_2018.csv"), 
                     guess_max = 5000) %>%
  select(-tract) %>%
  distinct()

xwalk_14 <- xwalk_18 %>%
  mutate(year = 2014)

xwalk_16 <- xwalk_18 %>%
  mutate(year = 2016)

xwalk <- bind_rows(xwalk_14, xwalk_16, xwalk_18)

frame <- 
  bind_rows(
    expand_grid(
      xwalk,
      subgroup_type = c("all"),
      subgroup = c("All"),
    ),
    expand_grid(
      xwalk,
      subgroup_type = c("race-ethnicity"),
      subgroup = c("Mixed Race and Ethnicity", "Majority Non-White", "Majority White, Non-Hispanic")
    )
  ) %>%
  arrange(year, state, county, subgroup_type, subgroup)
  
db <- full_join(frame, db, by = c("year", "state", "county", "subgroup_type", "subgroup"))

stopifnot(
  nrow(db) == nrow(frame)
)

```

# Recent-year Database

```{r}
read_csv_recent <- function(file) {
  
  file <- read_csv(file, guess_max = 5000)  %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           county = stringr::str_pad(county, width = 3, pad = "0")) %>%
    mutate(
      subgroup = case_when(
        subgroup == "all" ~ "all",
        subgroup == "Predominantly People of Color" ~ "Majority Non-White", 
        subgroup == "No Predominant Racial Group" ~ "Mixed Race and Ethnicity",
        subgroup == "Predominantly White" ~ "Majority White, Non-Hispanic",
        subgroup == "No Majority Race/Ethnicity" ~ "Mixed Race and Ethnicity", 
        TRUE ~ subgroup
      )
    ) %>%
    mutate(subgroup_type = str_to_lower(subgroup_type)) %>%
    filter(year == max(year)) %>%
    filter(subgroup_type %in% c("all", "race-ethnicity")) %>%
    select(-year)
  
  return(file)
  
}

# construct multiyear database
db_recent <- map(files, read_csv_recent) %>%
  reduce(full_join, by = c("state", "county", "subgroup_type", "subgroup")) %>%
  mutate(subgroup_type = str_to_lower(subgroup_type))

frame_recent <- 
  bind_rows(
    expand_grid(
      xwalk_18, 
      subgroup_type = c("all"),
      subgroup = c("All")
    ),
    expand_grid(
      xwalk_18,
      subgroup_type = c("race-ethnicity"),
      subgroup = c("Mixed Race and Ethnicity", "Majority Non-White", "Majority White, Non-Hispanic")
    )
  ) %>%
  arrange(year, state, county, subgroup_type, subgroup) %>%
  filter(year == max(year)) %>%
  select(-year)

db_recent <- full_join(frame_recent, db_recent, by = c("state", "county", "subgroup_type", "subgroup"))

stopifnot(nrow(frame) == nrow(db_recent))

```

## Quality and Completeness

### Full Database

missing metrics
metrics rated 1
metrics rated 2
metrics rated 3

```{r}
db %>%
  select(ends_with("_quality")) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality)

```

### Recent Database

```{r}
db_recent %>%
  select(ends_with("_quality")) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality) %>%
  gt()

```

## Test

### Full Database

```{r}
db_values <- db %>%
  select(-ends_with("_quality"), -ends_with("_ub"), -ends_with("_lb"))

db_quality <- db %>%
  select(ends_with("_quality"))

db_bounds <- db %>%
  select(ends_with("_ub"), ends_with("_lb"))

```

```{r}

db_values %>%
  #filter(!is.na(share_debt_coll)) %>%
  assert(within_bounds(0, 1), share_debt_coll) %>%
  assert(within_bounds(0, 100), transit_cost, transit_trips, environmental)

```

Test confidence interval bounds. 

```{r}
 db %>%
  verify(is.na(share_debt_coll) | share_debt_coll_lb < share_debt_coll) %>%
  verify(is.na(share_debt_coll) | share_debt_coll_lb < share_debt_coll_ub) %>%
  verify(is.na(share_debt_coll) | share_debt_coll < share_debt_coll_ub)

```

```{r}
db_quality %>%
  assert(in_set(1, 2, 3), everything())

```


## Write the File

```{r}


write_csv(db_recent, here("data", "04_mobility-metrics_race-share_recent.csv"))
write_csv(db, here("data", "04_mobility-metrics_race-share_all.csv"))

```
