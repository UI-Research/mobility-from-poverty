---
title: ""
author: ""
date: "`r format(Sys.time(), '%d %B, %Y')`"
format:
  html:
    code-fold: true
    css: 10_construct-database/www/web_report.css
    toc: true
    toc_float: true
editor_options: 
  chunk_output_type: console
---

<style>
@import url('https://fonts.googleapis.com/css?family=Lato&display=swap');
</style>

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato" />

```{r rmarkdown-setup, include = FALSE}
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(here)
library(assertr)
library(gt)

```

```{r}
read_csv(here("07_safety", "modified data", "2021_juv_arrest_rate_county_subgroup.csv")) %>%
  select(-core_reporting, -agencies_reporting) %>%
  mutate(
    subgroup = case_match(
      subgroup,
      "all" ~ "All",
      "white" ~ "White",
      "black" ~ "Black",
      "hispanic" ~ "Hispanic",
      "asian_other" ~ "Other races and ethnicities"
    )
  ) %>%
  rename(
    rate_juv_arrest = juv_arrest_rate,
    rate_juv_arrest_quality = juv_arrest_rate_quality
  ) %>%
  write_csv(here("data", "temp", "2021_juv_arrest_rate_county_subgroup.csv"))




```

```{r}
files <- c(
  #THIS IS GOING TO BE UPDATED TO USE NIBRS DATA WHICH REMAINS DISAGGREGATED NOT BY ETHNICITY
  # NOT DOING FURTHER WORK HERE UNTIL WE ACTUALLY GET THAT DATA - gm 2023-04-03
  # WE WILL ALSO HAVE JUVENILE ARRESTS AND CRIMES IN THIS CATEGORY
  here("07_safety", "modified data", "2021_juv_arrest_rate_county_subgroup.csv")
)

```

# Multi-year Database

```{r}
read_csv_and_clean <- function(file) {
  
  read_csv(file, guess_max = 5000) %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           county = stringr::str_pad(county, width = 3, pad = "0"))
  
}

db <- map(files, read_csv_and_clean) %>%
  reduce(full_join, by = c("year", "state", "county", "subgroup_type", "subgroup")) %>%
  filter(state != "02" & county != "270") 


xwalk_2016_analog_all <- 
      read_csv(here("geographic-crosswalks", 
                    "data", 
                    "tract-county-crosswalk_2018.csv"), guess_max = 5000) %>%
  mutate(year = 2016) %>%
  expand_grid(
      subgroup_type = c("all"),
      subgroup = c("All")
    )

xwalk_2016_analog_race <- read_csv(here("geographic-crosswalks", 
                    "data", 
                    "tract-county-crosswalk_2018.csv"), guess_max = 5000) %>%
  mutate(year = 2016) %>%
  expand_grid(
       subgroup_type = c("race-ethnicity"),
      subgroup = c("Black", "Other Races", "White")
    )


frame <- 
  bind_rows(
    expand_grid(
      read_csv(here("geographic-crosswalks", 
                    "data", 
                    "tract-county-crosswalk_2018.csv"), guess_max = 5000),
      subgroup_type = c("all"),
      subgroup = c("All")
    ),
    expand_grid(
      read_csv(here("geographic-crosswalks", 
                    "data", 
                    "tract-county-crosswalk_2018.csv"), guess_max = 5000),
      subgroup_type = c("race-ethnicity"),
      subgroup = c("Black", "Other Races", "White")
    ),
    xwalk_2016_analog_all,
    xwalk_2016_analog_race
  ) %>%
  arrange(year, state, county, subgroup_type, subgroup) %>%
  select(-tract) %>%
  distinct()
  
db <- full_join(frame, db, by = c("year", "state", "county", "subgroup_type", "subgroup"))


#We get differences here because we are missing 2016 Alaska data!
stopifnot(
  nrow(db) == nrow(frame)
)

unjoined <- anti_join(frame, db, by = c("year", "state", "county", "subgroup_type", "subgroup"))


```

# Recent-year Database

```{r}
read_csv_recent <- function(file) {
  
  file <- read_csv(file, guess_max = 5000)  %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           county = stringr::str_pad(county, width = 3, pad = "0")) %>%
    mutate(subgroup_type = str_to_lower(subgroup_type)) %>%
    filter(year == max(year)) %>%
    select(-year)
  
  return(file)
  
}

# construct multiyear database
db_recent <- map(files, read_csv_recent) %>%
  reduce(full_join, by = c("state", "county", "subgroup_type", "subgroup")) %>%
  mutate(subgroup_type = str_to_lower(subgroup_type)) %>%
  filter(state != "02" & county != "270")
# 
# frame <- 
#   bind_rows(
#     expand_grid(
#       read_csv(here("geographic-crosswalks", "data", "county-file.csv"), guess_max = 5000),
#       subgroup_type = c("all"),
#       subgroup = c("All")
#     ),
#     expand_grid(
#       read_csv(here("geographic-crosswalks", "data", "county-file.csv"), guess_max = 5000),
#       subgroup_type = c("race-ethnicity"),
#       subgroup = c("Black", "Other Races", "White")
#     )
#   ) %>%
#   arrange(year, state, county, subgroup_type, subgroup) %>%
#   filter(year == max(year)) %>%
#   select(-year)
# 
# db_recent <- full_join(frame, db_recent, by = c("state", "county", "subgroup_type", "subgroup"))
# 
# stopifnot(nrow(frame) == nrow(db_recent))

```

## Quality and Completeness

### Full Database

missing metrics
metrics rated 1
metrics rated 2
metrics rated 3

```{r}
db %>%
  select(ends_with("_quality")) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality)

```

### Recent Database

```{r}
db_recent %>%
  select(ends_with("_quality")) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality) %>%
  gt()

```

## Test

### Full Database

```{r}
db_values <- db %>%
  select(-ends_with("_quality"), -ends_with("_ub"), -ends_with("_lb"))

db_quality <- db %>%
  select(ends_with("_quality"))

db_bounds <- db %>%
  select(ends_with("_ub"), ends_with("_lb"))

```

```{r}

# db_values %>%
#   assert(within_bounds(0, 100000), juvenile_arrest_rate)

```


```{r}
db_quality %>%
  assert(in_set(1, 2, 3), everything())

```


```{r add-labels}
county_pop <- read_csv(here("geographic-crosswalks", "data", "county-populations.csv")) %>%
  select(state, county, state_name, county_name) %>%
  distinct()

db <- db %>%
  tidylog::left_join(county_pop) %>%
  relocate(year, state, county, state_name, county_name)
  
db_recent <- db_recent %>%
  tidylog::left_join(county_pop) %>%
  relocate(state, county, state_name, county_name)
```

## Write the File

```{r}
# write_csv(db, here("data", "02_mobility-metrics_race_longitudinal.csv"))

```
