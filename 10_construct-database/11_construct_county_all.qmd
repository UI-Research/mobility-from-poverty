---
title: "Combine Overall County Data"
author: "Aaron R. Williams and Ridhi Purohit"
date: today
format:
  html:
    embed-resources: true
    toc: true
    toc_float: true
execute:
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---
## Update 

This file was initially created by Aaron R. Williams and updated by Ridhi Purohit in March 2025 for metric release version 2025.

## Setup

```{r quarto-setup, include = FALSE}
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(tidylog)
library(here)
library(assertr)
library(gt)

```

This function is used to ensure that the lower bound of a 95% confidence interval is always below the estimate and the upper bound of the a 95% confidence interval is always above the estimate. 

```{r}
#' Test the bounds of a confidence interval relative to the estimate
#'
#' @param data The data frame of interest
#' @param estimate The unquoted name of the estimate variable
#' @param lb The unquoted name of the lower bound variable
#' @param ub The unquoted name of the upper bound variable
#'
test_bounds <- function(data, estimate, lb, ub) {
  
  subset <- bind_rows(
    data |>
      filter({{ ub }} < {{ lb }}),
    data |>
      filter({{ estimate }} > {{ ub }}),
    data |>
      filter({{ estimate  }} < {{ lb }}),
  )
  
  stopifnot(nrow(subset) == 0)
  
}


#' Helper function to silence output from testing code
#'
#' @param data A data frame
#'
quiet <- function(data) {
  
  quiet <- data
  
}

```

## Construct Database

### Temporary Fixes

This section implements temporary fixes and saves the resulting data in a temp folder. The saved data are then included in the output data.

```{r}

# create temp folder if it doesn't exist
if (!dir.exists(here("data", "temp"))) { 
  dir_create(here("data", "temp"))
}

# combine multiple years
bind_rows(
  read_csv(here("01_financial-well-being/share_debt_2018.csv")),
  read_csv(here("01_financial-well-being/county-debt-coll-shares-2022.csv")) |>
    filter(subgroup == "All") |>
    select(-subgroup_type, -subgroup),
  read_csv(here("01_financial-well-being/final/metrics_overall_debt_coll_all_county_2023.csv")) |>
    mutate(
            state = as.character(state), 
            county = as.character(county)
    )
  ) |>
  write_csv(here("data", "temp", "county_debt_longitudinal.csv"))


# remove subgroup columns
read_csv(here("02_housing/data/final/housing_county_2014_2015_2016_2017_2018_2019_2021_2022_2023.csv")) |>
  select(-subgroup_type, -subgroup) |>
  write_csv(here("data", "temp", "housing_county.csv"))

# combine multiple years
bind_rows(
  read_csv(here("05_local-governance", "voter-turnout", "voter-turnout-2016.csv")),
  read_csv(here("05_local-governance", "voter-turnout", "voter-turnout-2020.csv"))
) |>
  write_csv(
    here("data", "temp", "voter-turnout.csv")
  )

# fix column type
read_csv(here("01_financial-well-being/final/metrics_medical_debt_coll_all_county_2023.csv")) |>
  mutate(
    state = str_pad(as.character(state), width = 2, pad = "0", side = "left"),
    county = str_pad(as.character(county), width = 3, pad = "0", side = "left")
  ) |>
  write_csv(here("data", "temp", "metrics_medical_debt_coll_all_county.csv"))

# combine multiple years
bind_rows(
 read_csv(here("02_housing/data/final/homelessness_2019-2022_county.csv")),
 read_csv(here("02_housing/data/final/homelessness_2014-2018_county.csv"))
) |>
 select(year:count_homeless_ub, count_homeless_quality, share_homeless:share_homeless_quality) |>
 write_csv(
   here("data", "temp", "homelessness_county_all.csv")
 )

```

### Combine Files

This vector of filepaths points to all file to include in the output data. The vector points to the temp data for files that have temporary fixes.  

```{r}
filepaths <- c(
  here("geographic-crosswalks", "data", "county-populations.csv"),
  
  # 01 financial well-being
  here("01_financial-well-being/final/metrics_income_county_all_longitudinal.csv"),
  here("01_financial-well-being/final/households_house_value_race_ethnicity_all_county.csv"),
  here("data", "temp", "county_debt_longitudinal.csv"),
  here("data", "temp", "metrics_medical_debt_coll_all_county.csv"),
  
  # 02 housing
  here("data", "temp", "homelessness_county_all.csv"),
  here("data", "temp", "housing_county.csv"),
  
  # 04 health
  here("04_health/access-health-services/final/ratio_pop_pcp_metric_all_county.csv"),
  here("04_health/neonatal-health/data/final/rate_low_birth_weight_metric_all_county.csv"),
  here("04_health/exposure-to-trauma/data/final/rate_injury_deaths_metric_all_county.csv"),
  
  # 05 local-governance
  here("05_local-governance/descriptive-representation/data/final/descriptive_rep_denominator_county_all.csv"),
  here("data", "temp", "voter-turnout.csv"),

  # 06 neighborhoods
  here("06_neighborhoods/race-ethnicity-exposure/final/race-ethnicity-exposure-county.csv"),
  here("06_neighborhoods/poverty-exposure/final/poverty-exposure_county.csv"),
  here("06_neighborhoods/social-capital/final/social_associations_all_county.csv"),
  here("06_neighborhoods/social-capital/final/economic_connectedness_version2025_county_2022.csv"),
  here("06_neighborhoods/Transportation/final/transportation_all_county.csv"),
  here("06_neighborhoods/environment/data/final/environment_county_longitudinal.csv"),
 
  
  # 07 safety
  here("07_safety/final/rates_crime_county_all.csv"),
  here("07_safety/final/rate_arrests_county_all.csv"),
  
  # 08 education
  here("08_education/data/final/metrics_preschool_county_all_longitudinal_all.csv"),
  here("08_education/data/built/SEDA_all_county_2014-2018.csv"),
  here("08_education/data/final/meps_county_2014-2021.csv"),
  here("08_education/data/final/metrics_college_county_all_longitudinal.csv"),
  here("08_education/data/final/digital_access_county_all_longitudinal.csv"),
  
  # 09 employment
  here("09_employment/data/final/metrics_employment_county_all_longitudinal.csv"),
  here("09_employment/data/final/living_wage_county_all_longitudinal.csv")
)

```

This code loads each file and then combines them using `left_join()`. The first file is a population file, so there should be 3,143 counties per year. 

```{r}
db <- filepaths |>
  map(
    .f = ~read_csv(.x) 
  ) |>
  reduce(left_join, by = c("year", "state", "county"))

```

We rename the variables wherever required.

```{r}
db <- db |>
  rename(
    share_low_birth_weight = rate_low_birth_weight,
    share_low_birth_weight_lb = rate_low_birth_weight_lb,
    share_low_birth_weight_ub = rate_low_birth_weight_ub,
    share_low_birth_weight_quality = rate_low_birth_weight_quality,
    rate_learning = learning_rate,
    rate_learning_lb = learning_rate_lb,
    rate_learning_ub = learning_rate_ub,
    rate_learning_quality = learning_rate_quality,
    share_election_turnout = election_turnout,
    share_election_turnout_quality = election_turnout_quality
 )
```

### Clean file

Some subgroup information is not available for entire years. To simplify the user experience, remove these years entirely instead of giving a bunch of NAs.

```{r}

years_data <- db %>% 
  group_by(year) %>% 
  filter_at(vars(-year, -state, -state_name, -county, -county_name, -population), any_vars(!is.na(.))) %>% 
  group_by(year) %>% 
  count() %>% 
  select(year) %>% 
  pull()

```

Filter for only years that have data available.

```{r}
db  <- db  |>
  filter(year %in% years_data)
```

The quality flags are currently inputed as numbers 1 through 3. Update the data so these are labeled as text: 1="Strong", 2="Marginal", 3="Weak".

```{r}
db <- db  |>
  mutate(across(ends_with("quality"), ~case_when(. == 1 ~ "Strong",
                                                . == 2 ~ "Marginal",
                                                . == 3 ~ "Weak")))
```


## Quality and Completeness

### Dimensions

```{r}

db |>
  count(year) |>
  assert(
    within_bounds(3142, 3144),
    n
  )

```

### Data Quality Flags

This section summarizes data quality flags for variables and years.

```{r}
db |>
  select(ends_with("_quality")) |>
  pivot_longer(everything(), names_to = "variable", values_to = "quality") |>
  count(variable, quality) |>
  filter(!is.na(quality)) |>
  print(n = 100)

db |>
  select(year, ends_with("_quality")) |>
  pivot_longer(-year, names_to = "variable", values_to = "quality") |>
  count(year, quality) |>
  print(n = 100)

```

### Full Database

Evaluate the quality variables. 

```{r}
db |>
  select(ends_with("_quality")) |>
  assert(in_set("Strong", "Marginal", "Weak"), everything())

```

### 01 Financial Well-Being

```{r}
db |>
  assert(
    within_bounds(0, Inf), 
    pctl_income_20, 
    pctl_income_50, 
    pctl_income_80
  ) |>
  assert(
    within_bounds(0, Inf), 
    share_debt_coll, 
    share_debt_coll_ub, 
    share_debt_coll_lb
  ) |> 
  assert(
    within_bounds(0,1),
    share_medical_debt_coll
  ) |>
  quiet()
  
db |>
  separate_wider_delim(
    ratio_black_nh_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db |>
  separate_wider_delim(
    ratio_black_nh_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db |>
  separate_wider_delim(
    ratio_hispanic_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db |>
  separate_wider_delim(
    ratio_other_nh_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db |>
  separate_wider_delim(
    ratio_white_nh_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

```

### 02 Housing

```{R}
db |>
  assert(
    within_bounds(0, Inf),
    count_homeless,
    count_homeless_lb,
    count_homeless_ub
  ) |>
  assert(
    within_bounds(0, 1),
    share_homeless
  ) |>
  assert(
    within_bounds(0, Inf),
    share_affordable_80_ami,
    share_affordable_50_ami,
    share_affordable_30_ami
  ) |>
  assert(
    within_bounds(0, Inf),
    share_affordable_available_80_ami,
    share_affordable_available_50_ami,
    share_affordable_available_30_ami
  ) |>
  quiet()


test_bounds(
  data = db,
  estimate = count_homeless,
  lb = count_homeless_lb,
  ub = count_homeless_ub
)
```

### 04 Health

```{r}
db |>
  assert(
    within_bounds(0, Inf),
    ratio_population_pc_physician,
    rate_injury_death,
    rate_injury_death_lb,
    rate_injury_death_ub
  ) |>
  assert(
    within_bounds(0, 1),
    share_low_birth_weight,
    share_low_birth_weight_lb,
    share_low_birth_weight_ub
  ) |>
  quiet()

test_bounds(
  data = db,
  estimate = count_homeless,
  lb = count_homeless_lb,
  ub = count_homeless_ub
)

test_bounds(
  data = db, 
  estimate = share_low_birth_weight, 
  lb = share_low_birth_weight_lb, 
  ub = share_low_birth_weight_ub
)

test_bounds(
  data = db, 
  estimate = rate_injury_death, 
  lb = rate_injury_death_lb, 
  ub = rate_injury_death_ub
)

```

### 05 Local Governance

```{r}
db |>
  assert(
    within_bounds(0, Inf),
    share_desc_rep_other,
    share_desc_rep_black_nonhispanic,
    share_desc_rep_hispanic,
    share_desc_rep_white_nonhispanic
  ) |>
  assert(
    within_bounds(0, Inf),
    share_election_turnout
  ) |>
  quiet()

```

### 06 Neighborhoods

```{r}
db |>
  assert(
    within_bounds(0, Inf),
    share_black_nh_exposure,
    share_hispanic_exposure,
    share_other_nh_exposure,
    share_white_nh_exposure,
    share_poverty_exposure
  ) |>
  assert(
    within_bounds(0, 1),
    share_economic_connectedness,
    share_transportation_cost,
    share_transit_commuter
  ) |>
  assert(
    within_bounds(0, 10000),
    count_membership_associations_per_10k
  ) |>
  assert(
    within_bounds(0, 100),
    index_air_hazard
  ) |>
  quiet()

test_bounds(
  data = db, 
  estimate = share_economic_connectedness, 
  lb = share_economic_connectedness_lb, 
  ub = share_economic_connectedness_ub
)

```

### 07 Safety

```{r}
db |>
  assert(
    within_bounds(0, Inf),
    rate_crime_violent,
    rate_crime_property,
    rate_juv_arrest
  ) |>
  quiet()

```

### 08 Education

```{r}
db |>
  assert(
    within_bounds(0, 1),
    share_in_preschool,
    share_in_preschool_lb,
    share_in_preschool_ub,
    share_meps20_black,
    share_meps20_hispanic,
    share_meps20_white,
    share_hs_degree,
    share_hs_degree_lb,
    share_hs_degree_ub,
    share_digital_access
  ) |>
  assert(
    within_bounds(-10, 10),
    rate_learning,
    rate_learning_lb,
    rate_learning_ub
  ) |>
  quiet()

test_bounds(
  data = db, 
  estimate = share_in_preschool, 
  lb = share_in_preschool_lb, 
  ub = share_in_preschool_ub
)

test_bounds(
  data = db, 
  estimate = share_hs_degree, 
  lb = share_hs_degree_lb, 
  ub = share_hs_degree_ub
)

test_bounds(
  data = db,
  estimate = rate_learning,
  lb = rate_learning_lb,
  ub = rate_learning_ub
)

```

### 09 Employment

```{r}
db |>
  assert(
    within_bounds(0, 1),
    share_employed,
    share_employed_lb,
    share_employed_ub
  ) |>
  assert(
    within_bounds(0, 2),
    ratio_living_wage
  ) |>
  quiet()

test_bounds(
  data = db, 
  estimate = share_employed, 
  lb = share_employed_lb, 
  ub = share_employed_ub
)

```

## Write the File

```{r}
write_csv(db, here("data", "11_mobility-metrics_county_longitudinal.csv"))

```
