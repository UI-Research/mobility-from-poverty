---
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r, include = FALSE}
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(here)
library(assertr)
library(gt)

```

```{r}
#these are same for update as of 2023-04-03 (GM)
files <- c(
  here("data", "temp", "city-debt-col-shares_CORRECT.csv"),
  here("06_neighborhoods", 
       "environment", 
       "data", 
       "output", 
       "environment_place_sub_all.csv")
  )

```

```{r}

read_csv_and_clean <- function(file) {
  print(file)
  
  df <- read_csv(file, guess_max = 5000) %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           place = stringr::str_pad(place, width = 5, pad = "0")) %>%
    filter(subgroup_type %in% c("all", "race-ethnicity")) %>%
    mutate(
      subgroup = case_when(
        subgroup == "All" ~ "All",
        subgroup == "Predominantly People of Color" ~ "Majority Non-White", 
        subgroup == "No Predominant Racial Group" ~ "Mixed Race and Ethnicity",
        subgroup == "Predominantly White" ~ "Majority White, Non-Hispanic",
        subgroup == "No Majority Race/Ethnicity" ~ "Mixed Race and Ethnicity", 
        TRUE ~ subgroup
      ),
      subgroup_type = case_when(
        subgroup == "All" ~ "all",
        TRUE ~ subgroup_type
      )
    )
  
  return(df)
}

db_unclean <- map(files, read_csv_and_clean) %>%
  reduce(full_join, by = c("year", "state", "place", "subgroup_type", "subgroup")) %>%
  mutate(subgroup_type = str_to_lower(subgroup_type))
```

```{r add-labels}
place <- read_csv(here("geographic-crosswalks", "data", "place-populations.csv")) %>%
  select(state, place, state_name, place_name) %>%
  distinct()

db_unclean <- db_unclean %>%
  tidylog::left_join(place) %>%
  relocate(year, state, place, state_name, place_name, subgroup, subgroup_type) %>%
  select(-city)
  
```

```{r clean-db}
#' Function to clean database. 
#' 
#' The naming conventions implemented here are:
#' Everything that is a percentage/share begins with share_, a ratio begins with ratio_ , a rate begins with rate_ , and a percentile with pctl_ 
#' Only a handful of variables don't have these prefixes (transportation_cost and meps20...)
#' All _quality variables match the name of their respective variables unless the quality column refers to multiple variables
#' 
#' @param db_unclean (data.frame) - a dataframe joined together by the map-reduce
#'                                  logic above
#' @return db (data.frame) - a cleaned dataframe 

clean_data <- function(db_unclean){

  db <- db_unclean %>%
  
    rename_with(
      ~str_replace(.x, "environmental", "index_air_quality")
      ) 
  
 
}

db <- clean_data(db_unclean) %>%
  select(-c(place_name, state_name))


```

```{r}
xwalk <- read_csv(here("geographic-crosswalks", 
                          "data", 
                          "place-populations.csv"), 
                     guess_max = 5000) %>%
  filter(year == 2018) %>%
  select(-year) 


#We have three places not in the lookup table- they are the three identified using the lookup here: https://www2.census.gov/library/publications/2001/compendia/ccdb00/tabD1.pdf
arlington <- list(state = "51", place = "03000", state_name = "Virginia", place_name = "Arlington", population = 0)
paradise <- c(state = "32", place = "54600", state_name = "Nevada", place_name = "Paradise", population = 0)
temple_terrace <- c(state = "32", place = "71400", state_name = "Nevada", place_name = "Temple Terrace", population = 0)

xwalk <- rbind(xwalk, arlington, paradise, temple_terrace)

frame <- bind_rows(
    expand_grid(
      xwalk,
      subgroup_type = c("all"),
      subgroup = c("All"),
      year = c(2014, 2018, 2021)
    ),
    expand_grid(
      xwalk,
      subgroup_type = c("race-ethnicity"),
      subgroup = c("Mixed Race and Ethnicity", "Majority Non-White", "Majority White, Non-Hispanic"),
      year = c(2014, 2018, 2021)
    )
  ) %>%
  arrange(year, state, place, subgroup_type, subgroup) 

db <- tidylog::full_join(db, frame, by = c("state", "place", "year", "subgroup_type", "subgroup")) 




```


```{r}
db %>%
  select(ends_with("_quality")) %>%
  select(-index_air_quality) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality) %>%
  filter(!is.na(quality)) %>%
  print(n = 100)
```

```{r}
db %>% 
  assert(within_bounds(0, 100), index_air_quality) %>%
  assert(within_bounds(0, 1), share_debt_col)
```

```{r}

#write_csv(db_recent, here("data", "08_place_mobility-metrics_race-share_recent.csv"))
write_csv(db, here("data", "08_place_mobility-metrics_race-share_longitudinal.csv"))

```
