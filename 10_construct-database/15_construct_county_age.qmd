---
title: "Combine Age County Files"
author: "Aaron R. Williams, JP Walsh & Ridhi Purohit"
date: today
format:
  html:
    embed-resources: true
    toc: true
    toc_float: true
execute:
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---
## Update 

This file was updated by Ridhi Purohit in March 2025 for metric release version 2025.

## Setup

```{r quarto-setup, include = FALSE}
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(tidylog)
library(here)
library(assertr)
library(gt)

source(here::here("10_construct-database", "R", "combine_functions.R"))
```

## Construct Database

### Temporary Fixes

This section implements temporary fixes and saves the resulting data in a temp folder. The saved data are then included in the output data.

```{r}
read_csv(here("01_financial-well-being/final/households_house_value_race_ethnicity_subgroup_county.csv"))|>
  mutate(subgroup_type = ifelse(subgroup == "All", "all", subgroup_type)) |>
  write_csv(
    here("data", "temp", "households_house_value_age.csv")
  )
```

### Temporary Suppression

There are several variables where the results are unreasonable and we have high doubts about quality. These will be temporarily suppressed for this round.

```{r}

#Suppress counties arrests:
#New York County: St fip. 36, County fip. 061
#Sacramento County: St fip. 06, County fip. 067
#Santa Clara County: St fip. 06, County fip. 085

suppress_values <- c("36061", "06067", "06085")

read_csv(here("07_safety/final/rate_arrests_county_all_subgroup.csv")) %>% 
  mutate(combine_fip = paste0(state, county),
         across(rate_juv_arrest:rate_juv_arrest_quality, ~if_else(combine_fip %in% suppress_values & year != 2023, NA_integer_, .))) %>% 
  select(-combine_fip) %>% 
  write_csv(
    here("data", "temp", "rate_arrests_county_age_subgroup.csv")
  )

```

### Age files

Create population file with a variable for age. 

```{r}

expand_grid(
  read_csv(here("geographic-crosswalks", "data", "county-populations.csv")),
           subgroup = c("All", "Under Age 45", "Age 45 and Over", 
                        "Age 10 to 14", "Age 15 to 17")
) %>% 
   mutate(subgroup_type = ifelse(subgroup != "All", "age", "all")) %>% 
  select(-population) %>% 
  write_csv(here("data", "temp", "county-populations_age.csv"))

```

Read file paths to all county files with age subgroup information. 

```{r}

filepaths <- c(
  
# Race-ethnicity populations
here("data", "temp", "county-populations_age.csv"),

# 01 financial well-being
here("data", "temp", "households_house_value_age.csv"),

# 07 safety
here("data", "temp", "rate_arrests_county_age_subgroup.csv")

)
```

This code loads each file and then combines them using `left_join()`. The first file is a population file, so there should be 3,143 counties per year. 

```{r}
db_age <- filepaths |>
  map(
    .f = ~safe_read_csv(.x, geography = "county")
  ) |>
  reduce(left_join, by = c("year", "state", "county", "subgroup", "subgroup_type"))
```

### Clean file

Some subgroup information is not available for entire years. To simplify the user experience, remove these years entirely instead of giving a bunch of NAs.

```{r}

years_data <- db_age %>% 
  group_by(year) %>% 
  filter_at(vars(-year, -state, -state_name, -county, -county_name, -subgroup_type, -subgroup), any_vars(!is.na(.))) %>% 
  group_by(year) %>% 
  count() %>% 
  select(year) %>% 
  pull()

```

Filter for only years that have data available.

```{r}
db_age  <- db_age  |>
  filter(year %in% years_data)
```

The quality flags are currently inputed as numbers 1 through 3. Update the data so these are labeled as text: 1="Strong", 2="Marginal", 3="Weak".

```{r}
db_age  <- db_age  |>
  mutate(across(ends_with("quality"), ~case_when(. == 1 ~ "Strong",
                                                . == 2 ~ "Marginal",
                                                . == 3 ~ "Weak")))
```

## Quality and Completeness

### Dimensions

At most there should be 15,720 in a year (5X3144) and at the least there should be 15,710 in a year (5X3142).

```{r}

db_age |>
  count(year) |>
  assert(
    within_bounds(15710, 15720),
    n
  )
```

### Data Quality Flags

This section summarizes data quality flags for variables and years.

```{r}
db_age |>
  filter(subgroup != "All") |>
  select(ends_with("_quality")) |>
  pivot_longer(everything(), names_to = "variable", values_to = "quality") |>
  count(variable, quality) |>
  filter(!is.na(quality)) |>
  print(n = 100)

db_age  |>
  filter(subgroup != "All") |>
  select(year, ends_with("_quality")) |>
  pivot_longer(-year, names_to = "variable", values_to = "quality") |>
  count(year, quality) |>
  print(n = 100)

```

### Full Database

Evaluate the quality variables. 

```{r}
db_age |>
  select(ends_with("_quality")) |>
  assert(in_set("Strong", "Marginal", "Weak"), everything())

```

### 01 Financial Well-Being

```{r}

db_age |>
  separate_wider_delim(
    ratio_black_nh_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db_age |>
  separate_wider_delim(
    ratio_black_nh_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db_age |>
  separate_wider_delim(
    ratio_hispanic_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db_age |>
  separate_wider_delim(
    ratio_other_nh_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db_age |>
  separate_wider_delim(
    ratio_white_nh_house_value_households, 
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

```

### 07 Safety

```{r}
db_age |>
  assert(
    within_bounds(0, Inf),
    rate_juv_arrest
  ) |>
  quiet()

```

## Write the File

```{r}

write_csv(db_age, here("data", "15_mobility-metrics_county_age_longitudinal.csv"))
```


## Delete temp files

Delete the temp files created.

```{r}

tempfiles <- c(
  
# Race-ethnicity populations
here("data", "temp", "county-populations_age.csv"),

# 01 financial well-being
here("data", "temp", "households_house_value_age.csv"),

# Safety
 here("data", "temp", "rate_arrests_county_age_subgroup.csv")

)

file.remove(tempfiles)
```
