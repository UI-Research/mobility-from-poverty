---
title: "Combine Race-Ethnicity Place Files"
author: "Aaron R. Williams, JP Walsh & Manu Alcala"
date: today
format:
  html:
    embed-resources: true
    toc: true
    toc_float: true
execute:
  message: false
  warning: false
editor_options:
  chunk_output_type: console
---

## Setup

```{r quarto-setup, include = FALSE}
options(knitr.kable.NA = "")
```

```{r load-packages}
library(tidyverse)
library(tidylog)
library(here)
library(assertr)
library(gt)

source(here::here("10_construct-database", "R", "combine_functions.R"))
```

## Construct Database

### Temporary Fixes

This section implements temporary fixes and saves the resulting data in a temp folder. The saved data are then included in the output data.

```{r}
#Filter subgroups
read_csv(here("08_education", "data", "built", "SEDA_all_subgroups_city_2014-2018.csv")) %>%
  filter(subgroup_type %in% c("all", "race-ethnicity")) %>%
  write_csv(here("data", "temp", "SEDA_all_subgroups_city.csv"))

#Fix typo in subgroup_type
read_csv(here("08_education/data/final/digital_access_place_race_ethnicity_longitudinal.csv"))|>
  mutate(subgroup_type = ifelse(subgroup_type == "race_ethnicity", "race-ethnicity", subgroup_type))|>
  write_csv(here("data", "temp", "digital_access_race_city.csv"))


```

### Temporary Suppression

There are several variables where the results are unreasonable and we have high doubts about quality. These will be temporarily suppressed for this round.

```{r}
#Suppress places homelessness:
#Los Angeles City: St fip. 06, Place fip. 44000 in 2022

suppress_values <- c("0644000")

read_csv(here("02_housing/data/final/homelessness_2019-2022_subgroups_city.csv")) %>% 
  mutate(combine_fip = paste0(state, place),
         across(share_homeless:share_homeless_quality, ~if_else(combine_fip %in% suppress_values & year == 2022 & subgroup != "All", NA_integer_, .))) %>% 
  select(-combine_fip) %>% 
  write_csv(
    here("data", "temp", "homelessness_sub_city.csv")
  )

#Suppress places arrests:
#New York City: St fip. 36, Place fip. 51000
#San Jose City: St fip. 06, Place fip. 68000
#Sacramento City: St fip. 06, Place fip. 64000

suppress_values <- c("3651000", "0668000", "0664000")

read_csv(here("07_safety/final/rate_arrests_place_all_subgroup.csv")) %>% 
  mutate(combine_fip = paste0(state, place),
         across(rate_juv_arrest:rate_juv_arrest_quality, ~if_else(combine_fip %in% suppress_values & year != 2023, NA_integer_, .))) %>% 
  select(-combine_fip) %>% 
  write_csv(
    here("data", "temp", "rates_arrest_place_race.csv")
  )

```

### Race-ethnicity files

Create a population file with a variable for race-ethnicity and race values.

```{r}
expand_grid(
  read_csv(here("geographic-crosswalks", "data", "place-populations.csv")),
  subgroup = c(
    "All", "Black", "Black, Non-Hispanic", "White",
    "White, Non-Hispanic", "Other Races and Ethnicities", "Hispanic"
  )
) %>%
  mutate(subgroup_type = ifelse(subgroup != "All", "race-ethnicity", "all")) %>%
  select(-population) %>%
  write_csv(here("data", "temp", "place-populations_race-ethnicity.csv"))
```

Read file paths to all place files with race-ethnicity and race information.

```{r}
filepaths <- c(
  # Race-ethnicity populations
  here("data", "temp", "place-populations_race-ethnicity.csv"),

  # 01 financial well-being
  here("01_financial-well-being/final/metrics_income_place_race-ethnicity_longitudinal.csv"),

  # RP: Needs update when data becomes available
  # 02 housing
  here("data", "temp", "homelessness_sub_city.csv"),

  # 06 neighborhoods
  here("06_neighborhoods", "poverty-exposure", "final", "poverty-exposure_race-ethnicity_city.csv"),

  # 07 safety
  here("data", "temp", "rates_arrest_place_race.csv"),

  # 08 education
  here("08_education/data/final/metrics_preschool_place_race-ethnicity_longitudinal.csv"),
  here("data", "temp", "SEDA_all_subgroups_city.csv"),
  here("08_education/data/final/metrics_college_place_race-ethnicity_longitudinal.csv"),
  here("data", "temp", "digital_access_race_city.csv"),

  # 09 employment
  here("09_employment/data/final/metrics_employment_place_race-ethnicity_longitudinal.csv")
)
```

This code loads each file and then combines them using `left_join()`. The first file is a population file, so there should be 486 places per year.

```{r}
db_race_eth <- filepaths |>
  map(
    .f = ~ safe_read_csv(.x, geography = "place")
  ) |>
  reduce(left_join, by = c("year", "state", "place", "subgroup", "subgroup_type"))
```

We used old learning rate data, so we rename the variables. We also use old data for economic connectedness, so we rename the variables.

```{r}

db_race_eth <- db_race_eth |>
  rename(
    rate_learning = learning_rate,
    rate_learning_lb = learning_rate_lb,
    rate_learning_ub = learning_rate_ub,
    rate_learning_quality = learning_rate_quality
  )
```

### Clean file

Some subgroup information is not available for entire years. To simplify the user experience, remove these years entirely instead of giving a bunch of NAs.

```{r}
years_data <- db_race_eth %>%
  group_by(year) %>%
  filter_at(vars(-year, -state, -place, -state_name, -place_name, -subgroup_type, -subgroup), any_vars(!is.na(.))) %>%
  group_by(year) %>%
  count() %>%
  select(year) %>%
  pull()
```

Filter for only years that have data available.

```{r}
db_race_eth <- db_race_eth |>
  filter(year %in% years_data)
```

The quality flags are currently inputed as numbers 1 through 3. Update the data so these are labeled as text: 1="Strong", 2="Marginal", 3="Weak".

```{r}
db_race_eth <- db_race_eth |>
  mutate(across(ends_with("quality"), ~ case_when(
    . == 1 ~ "Strong",
    . == 2 ~ "Marginal",
    . == 3 ~ "Weak"
  )))
```


## Quality and Completeness

### Dimensions

At most there should 3,402 in a year (7X486) and at the least there should be 3,395 in a year (7X485)
```{r}
dimension_test <- function(.data) {
  .data |>
    count(year) |>
    assert(
      within_bounds(3395, 3402),
      n
    )
}

dimension_test(db_race_eth)
```

### Data Quality Flags

This section summarizes data quality flags for variables and years.

```{r}
db_race_eth |>
  filter(subgroup != "All") |>
  select(ends_with("_quality")) |>
  pivot_longer(everything(), names_to = "variable", values_to = "quality") |>
  count(variable, quality) |>
  filter(!is.na(quality)) |>
  print(n = 100)

db_race_eth |>
  filter(subgroup != "All") |>
  select(year, ends_with("_quality")) |>
  pivot_longer(-year, names_to = "variable", values_to = "quality") |>
  count(year, quality) |>
  print(n = 100)
```

### Full Database

Evaluate the quality variables.

```{r}
db_race_eth |>
  select(ends_with("_quality")) |>
  assert(in_set("Strong", "Marginal", "Weak"), everything())
```

### 01 Financial Well-Being

```{r}
db_race_eth |>
  assert(
    within_bounds(0, Inf),
    pctl_income_20,
    pctl_income_50,
    pctl_income_80
  ) |>
  quiet()
```

### 02 Housing

```{R}

db_race_eth |>
  assert(
    within_bounds(0, Inf),
    count_homeless,
    count_homeless_lb,
    count_homeless_ub
  ) |>
  assert(
    within_bounds(0, 1),
    share_homeless
  ) |>
  quiet()

test_bounds(
  data = db_race_eth,
  estimate = count_homeless,
  lb = count_homeless_lb,
  ub = count_homeless_ub
)
```

### 07 Safety

```{r}

db_race_eth |>
  assert(
    within_bounds(0, Inf),
    rate_juv_arrest
  ) |>
  quiet()
```

### 08 Education

```{r}

db_race_eth |>
  assert(
    within_bounds(0, 1),
    share_in_preschool,
    share_in_preschool_lb,
    share_in_preschool_ub,
    share_hs_degree,
    share_hs_degree_lb,
    share_hs_degree_ub
  ) |>
  assert(
    within_bounds(-10, 10),
    rate_learning,
    rate_learning_lb,
    rate_learning_ub
  ) |>
  quiet()

db_race_eth |>
  assert(
    within_bounds(0, 1),
    share_digital_access
  ) |>
  quiet()

test_bounds(
  data = db_race_eth,
  estimate = share_in_preschool,
  lb = share_in_preschool_lb,
  ub = share_in_preschool_ub
)

test_bounds(
  data = db_race_eth,
  estimate = share_hs_degree,
  lb = share_hs_degree_lb,
  ub = share_hs_degree_ub
)

test_bounds(
  data = db_race_eth,
  estimate = rate_learning,
  lb = rate_learning_lb,
  ub = rate_learning_ub
)
```

### 09 Employment

```{r}
db_race_eth |>
  assert(
    within_bounds(0, 1),
    share_employed,
    share_employed_lb,
    share_employed_ub
  ) |>
  quiet()

test_bounds(
  data = db_race_eth,
  estimate = share_employed,
  lb = share_employed_lb,
  ub = share_employed_ub
)
```

## Write the File

```{r}
write_csv(db_race_eth, here("data", "62_mobility-metrics_place_race-ethnicity_longitudinal.csv"))
```

## Delete temp files

Delete the created temp files

```{r}
tempfiles <- c(

  here("data", "temp", "SEDA_all_subgroups_city.csv"),
  
  here("data", "temp", "digital_access_race_city.csv"),
  
  here("data", "temp", "homelessness_sub_city.csv"),
  
  here("data", "temp", "rates_arrest_place_race.csv")
)

file.remove(tempfiles)
```
