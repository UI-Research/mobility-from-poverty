---
title: "Combine Age Place Files"
author: "Aaron R. Williams & JP Walsh"
date: today
format:
  html:
    embed-resources: true
    toc: true
    toc_float: true
execute:
  message: false
  warning: false
editor_options:
  chunk_output_type: console
---

## Setup

```{r quarto-setup, include = FALSE}
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(tidylog)
library(here)
library(assertr)
library(gt)

source(here::here("10_construct-database", "R", "combine_functions.R"))
```

## Construct Database

### Temporary Suppression

There are several variables where the results are unreasonable and we have high doubts about quality. These will be temporarily suppressed for this round.

```{r}
#Suppress places arrests:
#New York City: St fip. 36, Place fip. 5100
#San Jose City: St fip. 06, Place fip. 6800

suppress_values <- c("3651000", "0668000")


read_csv(here("07_safety/final/rate_arrests_place_all_subgroup.csv")) %>% 
  mutate(combine_fip = paste0(state, place),
         across(rate_juv_arrest:rate_juv_arrest_quality, ~if_else(combine_fip %in% suppress_values & year != 2023, NA_integer_, .))) %>% 
  select(-combine_fip) %>% 
  write_csv(
    here("data", "temp", "rates_arrest_place_age.csv")
  )

```

### Data wrangling

```{r}
read_csv(here("01_financial-well-being/final/households_house_value_race_ethnicity_subgroup_city.csv")) |>
    mutate(subgroup_type = ifelse(subgroup == "All", "all", subgroup_type)) |>
    write_csv(here("data", "temp", "households_value_age_city.csv"))
```

### Age files

Create population file with a variable for age.

```{r}

expand_grid(
  read_csv(here("geographic-crosswalks", "data", "place-populations.csv")),
           subgroup = c("All", "Under Age 45", "Age 45 and Over",
                        "Age 10 to 14", "Age 15 to 17")
) %>%
   mutate(subgroup_type = ifelse(subgroup != "All", "age", "all")) %>%
  select(-population) %>%
  write_csv(here("data", "temp", "place-populations_age.csv"))

```

Read file paths to all place files with age subgroup information.

```{r}

filepaths <- c(

# Race-ethnicity populations
here("data", "temp", "place-populations_age.csv"),

# 01 financial well-being
here("data", "temp", "households_value_age_city.csv"),

# 07 safety
here("data", "temp", "rates_arrest_place_age.csv")

)
```

This code loads each file and then combines them using `left_join()`. The first file is a population file, so there should be 486 places per year.

```{r}

db_age <- filepaths |>
  map(
    .f = ~safe_read_csv(.x, geography = "place")
  ) |>
  reduce(left_join, by = c("year", "state", "place", "subgroup", "subgroup_type"))
```

### Clean file

Some subgroup information is not available for entire years. To simplify the user experience, remove these years entirely instead of giving a bunch of NAs.

```{r}

years_data <- db_age %>%
  group_by(year) %>%
  filter_at(vars(-year, -state, -state_name, -place, -place_name, -subgroup_type, -subgroup), any_vars(!is.na(.))) %>%
  group_by(year) %>%
  count() %>%
  select(year) %>%
  pull()

```

Filter for only years that have data available.

```{r}
db_age  <- db_age  |>
  filter(year %in% years_data)
```

The quality flags are currently inputed as numbers 1 through 3. Update the data so these are labeled as text: 1="Strong", 2="Marginal", 3="Weak".

```{r}
db_age  <- db_age  |>
  mutate(across(ends_with("quality"), ~case_when(. == 1 ~ "Strong",
                                                . == 2 ~ "Marginal",
                                                . == 3 ~ "Weak")))
```

## Quality and Completeness

### Dimensions

At most there should be 2,430 in a year (5X486) and at the least there should be 2,425 in a year (5X485).

```{r}

db_age |>
  count(year) |>
  assert(
    within_bounds(2425, 2430),
    n
  )
```

### Data Quality Flags

This section summarizes data quality flags for variables and years.

```{r}
db_age |>
  filter(subgroup != "All") |>
  select(ends_with("_quality")) |>
  pivot_longer(everything(), names_to = "variable", values_to = "quality") |>
  count(variable, quality) |>
  filter(!is.na(quality)) |>
  print(n = 100)

db_age  |>
  filter(subgroup != "All") |>
  select(year, ends_with("_quality")) |>
  pivot_longer(-year, names_to = "variable", values_to = "quality") |>
  count(year, quality) |>
  print(n = 100)

```

### Full Database

Evaluate the quality variables.

```{r}
db_age |>
  select(ends_with("_quality")) |>
  assert(in_set("Strong", "Marginal", "Weak"), everything())

```

### 01 Financial Well-Being

```{r}

db_age |>
  separate_wider_delim(
    ratio_black_nh_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db_age |>
  separate_wider_delim(
    ratio_black_nh_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db_age |>
  separate_wider_delim(
    ratio_hispanic_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db_age |>
  separate_wider_delim(
    ratio_other_nh_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db_age |>
  separate_wider_delim(
    ratio_white_nh_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

```

### 07 Safety

```{r}

db_age |>
  assert(
    within_bounds(0, Inf),
    rate_juv_arrest
  ) |>
  quiet()

```

## Write the File

```{r}

write_csv(db_age, here("data", "65_mobility-metrics_place_age_longitudinal.csv"))
```

## Delete temp files

Delete created temp files.

```{r}

tempfiles <- c(
  
# 01 financial well-being
here("data", "temp", "households_value_age_city.csv"),

# Safety
here("data", "temp", "rates_arrest_place_age.csv")

)

file.remove(tempfiles)
```
