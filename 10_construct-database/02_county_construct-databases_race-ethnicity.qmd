---
title: ""
author: ""
date: "`r format(Sys.time(), '%d %B, %Y')`"
format:
  html:
    embed-resources: true
    code-fold: true
    css: 10_construct-database/www/web_report.css
    toc: true
    toc_float: true
editor_options: 
  chunk_output_type: console
---

```{r rmarkdown-setup, include = FALSE}
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(knitr.kable.NA = "")

```

```{r load-packages}
library(tidyverse)
library(here)
library(assertr)
library(gt)

```

```{r, combine-neonatal-health}

concatenate_files <- function(files){
  lapply(files, read_csv) %>%
    bind_rows()
}

neonatal <- concatenate_files(
  c(
    here("04_health", "final_data", "neonatal_health_subgroup_2018.csv"),
    here("04_health", "final_data", "neonatal_health_subgroup_2020.csv")
  )
) %>%
  rename_with(~ gsub("lbw", "rate_low_birth_weight", .x, fixed = TRUE)) %>%
  write_csv( 
          here::here("data", "temp", "neonatal_health_subgroup_CORRECT.csv")
          )
```


```{r combine-some-data}
bind_rows(
  read_csv(here("08_education", "metrics_pre_subgroup_2021.csv")),
  read_csv(here("08_education", "metrics_preschool_subgroup.csv")) %>%
    rename(share_in_preschool_quality = preschool_quality)
) %>%
  write_csv(here("data", "temp", "metrics_preschool_subgroup.csv"))

bind_rows(
  read_csv(here("08_education", "metrics_college_subgroup.csv")) %>%
    rename(share_hs_degree_quality = hs_degree_quality),
  read_csv(here("08_education", "metrics_college_subgroup_2021.csv"))
) %>%
  write_csv(here("data", "temp", "metrics_college_subgroup.csv"))

read_csv(here("09_employment", "data", "final", "metrics_employment_county_race-ethnicity_longitudinal.csv")) %>%
  filter(year < 2022) %>%
  write_csv(here("data", "temp", "metrics_employment_county_race-ethnicity_longitudinal.csv"))

read_csv(here("01_financial-well-being", "data", "final", "metrics_income_county_race-ethnicity_longitudinal.csv")) %>%
  filter(year < 2022) %>%
  write_csv(here("data", "temp", "metrics_income_county_race-ethnicity_longitudinal.csv"))

```

```{r}
files <- c(
  
  ### EDUCATION ###
  here("data", "temp", "metrics_preschool_subgroup.csv"),
  here("data", "temp", "metrics_college_subgroup.csv"),
  here("08_education", "SEDA_all_subgroups_county.csv"), #Effective public education
  
  ### FINANCIAL WELLBEING ###
  here("data", "temp", "metrics_income_county_race-ethnicity_longitudinal.csv"),

  ### HEALTH ###
  here("data", "temp", "neonatal_health_subgroup_CORRECT.csv"),

  ### HOUSING ###
  
  ### NEIGHBORHOODS ### 
  
  ### SAFETY ###

    ### WORK ### 
  here("data", "temp", "metrics_employment_county_race-ethnicity_longitudinal.csv")
)

```

# Multi-year Database

```{r}
read_csv_and_clean <- function(file) {
  print(file)
  
  read_csv(file, guess_max = 5000) %>%
    mutate(state = stringr::str_pad(state, width = 2, pad = "0"),
           county = stringr::str_pad(county, width = 3, pad = "0")) %>%
    mutate(subgroup_type = str_replace(subgroup_type, "Race-ethnicity", "race-ethnicity")) %>%
    mutate(subgroup = str_replace(subgroup, "Other Races and Eth$", "Other Races and Ethnicities")) %>%
    mutate(subgroup = str_replace(subgroup, "White, Non Hispanic", "White, Non-Hispanic")) %>%
    mutate(subgroup = str_replace(subgroup, "Black, Non Hispanic", "Black, Non-Hispanic"))
  
}

db <- map(files, read_csv_and_clean) %>%
  reduce(full_join, by = c("year", "state", "county", "subgroup_type", "subgroup"))

# fix non-missing quality flags
db <- db %>%
  mutate(
    pctl_20_quality = if_else(is.na(pctl_income_20), as.numeric(NA), pctl_20_quality),
    pctl_50_quality = if_else(is.na(pctl_income_50), as.numeric(NA), pctl_50_quality),
    pctl_80_quality = if_else(is.na(pctl_income_80), as.numeric(NA), pctl_80_quality),
    share_hs_degree_quality = if_else(is.na(share_hs_degree), as.numeric(NA), share_hs_degree_quality),
    share_in_preschool_quality = if_else(is.na(share_in_preschool), as.numeric(NA), share_in_preschool_quality),
    share_employed_quality = if_else(is.na(share_employed), as.numeric(NA), share_employed_quality)
  ) %>%
  #remove non-race and ethnicity related subgroups:
  filter(subgroup_type == "race-ethnicity" | subgroup_type == "all") 

```

Remove an extra county from Alaska.

```{r}
db <- db %>%
  filter(!(state == "02" & county == "261"))

```


157,150 rows = 3,143 counties by 10 years by 5 subgroups

```{r}
frame <-
  bind_rows(
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "county-populations.csv"), guess_max = Inf) %>%
        filter(year == 2020) %>%
        select(-year),
      year = 2013:2022,
      subgroup_type = c("all"),
      subgroup = c("All")
    ),
    expand_grid(
      read_csv(here("geographic-crosswalks", "data", "county-populations.csv"), guess_max = Inf) %>%
        filter(year == 2020) %>%
        select(-year),
      year = 2013:2022,
      subgroup_type = c("race-ethnicity"),
      subgroup = c("Black, Non-Hispanic", "Hispanic", "Other Races and Ethnicities", "White, Non-Hispanic")
    )
  ) %>%
  arrange(year, state, county, subgroup_type, subgroup)

db <- full_join(frame, db, by = c("year", "state", "county", "subgroup_type", "subgroup"))

stopifnot(
  nrow(db) == nrow(frame)
)

```

```{r clean-data}
#' Function to clean db, largely by updating names
#' @param db_unclean (data.frame) dataframe joined by map reduce logic above
#' @return db (data.frame) the cleaned dataframe


clean_data <- function(db_unclean){
  db <- db_unclean %>%
    rename_with(~str_replace_all(.x, "learning_rate", "rate_learning")
                ) %>%
    mutate(
      pctl_income_quality = pctl_20_quality 
    )
  
  return(db)
  
}

db <- clean_data(db)


t <- db %>%
  group_by(state, county, year) %>% 
  count()

nrow(db) / nrow(t)
```

# Recent-year Database

## Quality and Completeness

### Full Database

missing metrics
metrics rated 1
metrics rated 2
metrics rated 3

```{r}
db %>%
  select(ends_with("_quality")) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "quality") %>%
  count(variable, quality)

```

## Test

### Full Database

```{r}
db_values <- db %>%
  select(-ends_with("_quality"), -ends_with("_ub"), -ends_with("_lb"))

db_quality <- db %>%
  select(ends_with("_quality"))

db_bounds <- db %>%
  select(ends_with("_ub"), ends_with("_lb"))

```

```{r}
db_values %>%
  assert(within_bounds(0, Inf), pctl_income_20, pctl_income_50, pctl_income_80) %>%
  assert(within_bounds(0, 1), rate_low_birth_weight) %>%
  assert(within_bounds(-2, 10), rate_learning) %>%
  assert(within_bounds(0, 1), starts_with("share_"))

```

Test confidence interval bounds. 

```{r}
 db %>%
  verify(is.na(rate_low_birth_weight) | rate_low_birth_weight_lb < rate_low_birth_weight) %>%
  verify(is.na(rate_low_birth_weight) | rate_low_birth_weight_lb < rate_low_birth_weight_ub) %>%
  verify(is.na(rate_low_birth_weight) | rate_low_birth_weight < rate_low_birth_weight_ub)

db %>%
  verify(is.na(rate_learning) | rate_learning_lb < rate_learning) %>%
  verify(is.na(rate_learning) | rate_learning_lb < rate_learning_ub) %>%
  verify(is.na(rate_learning) | rate_learning < rate_learning_ub)

db %>%
  verify(is.na(share_in_preschool) | share_in_preschool_lb < share_in_preschool) %>%
  verify(is.na(share_in_preschool) | share_in_preschool_lb < share_in_preschool_ub) %>%
  verify(is.na(share_in_preschool) | share_in_preschool< share_in_preschool_ub)

db %>%
  verify(is.na(share_hs_degree) | share_hs_degree_lb <= share_hs_degree) %>%
  verify(is.na(share_hs_degree) | share_hs_degree_lb <= share_hs_degree_ub) %>%
  verify(is.na(share_hs_degree) | share_hs_degree <= share_hs_degree_ub)

```

```{r}

db_quality %>%
  assert(in_set(1, 2, 3), everything())

```

```{r add-labels}

county_pop <- read_csv(here("geographic-crosswalks", "data", "county-populations.csv")) %>%
  select(state, county, state_name, county_name) %>%
  distinct()

db <- db %>%
  tidylog::left_join(county_pop) %>%
  relocate(year, state, county, state_name, county_name) %>%
  select(
    -share_hs_degree_lb, -share_hs_degree_ub, 
    -share_in_preschool_lb, -share_in_preschool_ub
  )

```

## Write the File

```{r}
write_csv(db, here("data", "01_mobility-metrics_race-ethnicity_longitudinal.csv"))

```
