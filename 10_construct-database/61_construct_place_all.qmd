---
title: "Combine Overall Place Data"
author: "Aaron R. Williams & Manu Alcala"
date: today
format:
  html:
    embed-resources: true
    toc: true
    toc_float: true
execute:
  message: false
  warning: false
editor_options:
  chunk_output_type: console
---

## Setup

```{r quarto-setup, include = FALSE}
options(knitr.kable.NA = "")
```

```{r load-packages}
library(tidyverse)
library(tidylog)
library(here)
library(assertr)
library(gt)

source(here::here("10_construct-database", "R", "combine_functions.R"))
```

## Construct Database

### Temporary Fixes

This section implements temporary fixes and saves the resulting data in a temp folder. The saved data are then included in the output data.

```{r}
# clean up data
read_csv(here("01_financial-well-being/city-debt-coll-shares-2021.csv")) |>
  filter(subgroup == "All") |>
  select(-subgroup_type, -subgroup, -city) |>
  rename(place = place_fips) |>
  write_csv(here("data", "temp", "place_debt_longitudinal.csv"))

read_csv(here("06_neighborhoods/race-ethnicity-exposure/race-ethnicity-exposure-city.csv")) |>
  select(-state_place) |>
  write_csv(here("data", "temp", "race-ethnicity-exposure-city.csv"))


bind_rows(
  read_csv(here("05_local-governance/voter-turnout/data/final/voter-turnout-city-2016.csv")),
  read_csv(here("05_local-governance/voter-turnout/voter-turnout-city-2020.csv")) |>
    rename(
      share_election_turnout = election_turnout,
      share_election_turnout_quality = election_turnout_quality
    )
) |>
  write_csv(here("data", "temp", "voter-turnout-city.csv"))

bind_rows(
    read_csv(here("02_housing/data/final/homelessness_2014-2018_city.csv")),
    read_csv(here("02_housing/data/final/homelessness_2019-2022_city.csv"))
) |>
  write_csv(
    here("data", "temp", "homelessness_city_all.csv")
  )
```


### Temporary Suppression

There are several variables where the results are unreasonable and we have high doubts about quality. These will be temporarily suppressed for this round.

```{r}
#Suppress places crime & arrests:
#New York City: St fip. 36, Place fip. 5100
#San Jose City: St fip. 06, Place fip. 6800

suppress_values <- c("3651000", "0668000")

read_csv(here("07_safety/final/rates_crime_place_all.csv")) %>% 
  mutate(combine_fip = paste0(state, place),
         across(rate_crime_violent:rate_crime_property_quality, ~if_else(combine_fip %in% suppress_values & year != 2023, NA_integer_, .))) %>% 
  select(-combine_fip) %>% 
  write_csv(
    here("data", "temp", "rates_crime_place_all.csv")
  )


read_csv(here("07_safety/final/rate_arrests_place_all.csv")) %>% 
  mutate(combine_fip = paste0(state, place),
         across(rate_juv_arrest:rate_juv_arrest_quality, ~if_else(combine_fip %in% suppress_values & year != 2023, NA_integer_, .))) %>% 
  select(-combine_fip) %>% 
  write_csv(
    here("data", "temp", "rates_arrest_place_all.csv")
  )

#Suppress places affordable & available:
#Pearland, Texas: St fip. 48, Place fip. 56348 just for 2014
suppress_values <- c("4856348")

read_csv(here("02_housing/data/final/housing_place_2014_2015_2016_2017_2018_2019_2021_2022_2023.csv")) %>% 
  mutate(combine_fip = paste0(state, place),
         across(share_affordable_available_30_ami:share_affordable_available_80_ami_quality, ~if_else(combine_fip %in% suppress_values & year == 2014, NA_integer_, .))) %>% 
  select(-combine_fip) %>% 
  write_csv(
    here("data", "temp", "housing_place_all.csv")
  )

```

### Combine Files

This vector of filepaths points to all file to include in the output data. The vector points to the temp data for files that have temporary fixes.

```{r}
filepaths <- c(
  here("geographic-crosswalks", "data", "place-populations.csv"),

  # 01 financial well-being
  here("01_financial-well-being/final/metrics_income_place_all_longitudinal.csv"),
  here("01_financial-well-being/final/households_house_value_race_ethnicity_all_city.csv"),
  here("data", "temp", "place_debt_longitudinal.csv"),
  #
  # 02 housing
  here("data", "temp", "homelessness_city_all.csv"),
  here("data", "temp", "housing_place_all.csv"),
  # 04 health
  # no ratio of pcp to population
  # no neonatal health
  # no deaths from injury
  #
  # 05 local-governance
  here("05_local-governance/descriptive-representation/data/final/descriptive_rep_denominator_city_all.csv"),
  here("data", "temp", "voter-turnout-city.csv"),
  #
  # 06 neighborhoods
  here("data", "temp", "race-ethnicity-exposure-city.csv"),
  here("06_neighborhoods/poverty-exposure/final/poverty-exposure_city.csv"),
  here("06_neighborhoods/social-capital/final/social_associations_all_city.csv"),
  here("06_neighborhoods/social-capital/final/economic_connectedness_version2025_place_2022.csv"),
  here("06_neighborhoods/environment/data/final/environment_place_longitudinal.csv"),
  here("06_neighborhoods/Transportation/final/transportation_all_city.csv"),
  #
  # 07 safety
  here("data", "temp", "rates_crime_place_all.csv"),
  here("data", "temp", "rates_arrest_place_all.csv"),
  #
  # 08 education
  here("08_education/data/final/metrics_preschool_place_all_longitudinal_all.csv"),
  here("08_education/data/built/SEDA_all_city_2014-2018.csv"),
  here("08_education/data/final/meps_city_2014-2021.csv"),
  here("08_education/data/final/metrics_college_place_all_longitudinal.csv"),
  here("08_education/data/final/digital_access_place_all_longitudinal.csv"),
  #
  # 09 employment
  here("09_employment/data/final/metrics_employment_place_all_longitudinal.csv")
  # no wage ratio for places
)

# variables erroneously included in the data sets
extra_variables <- c(
  "state_place" # race-ethnicity exposure
)
```

This code loads each file and then combines them using `left_join()`. The first file is a population file, so there should be 486 places per year.

```{r}
db <- filepaths |>
  map(
    .f = ~ safe_read_csv(.x, geography = "place")
  ) |>
  reduce(left_join, by = c("year", "state", "place"))
```

We used old learning rate data, so we rename the variables. We also use old data for economic connectedness, so we rename the variables.

```{r}
db <- db |>
  rename(
    rate_learning = learning_rate,
    rate_learning_lb = learning_rate_lb,
    rate_learning_ub = learning_rate_ub,
    rate_learning_quality = learning_rate_quality
  )
```

### Clean file

Some subgroup information is not available for entire years. To simplify the user experience, remove these years entirely instead of giving a bunch of NAs.

```{r}
years_data <- db %>%
  group_by(year) %>%
  filter_at(vars(-year, -state, -state_name, -place, -place_name, -population), any_vars(!is.na(.))) %>%
  group_by(year) %>%
  count() %>%
  select(year) %>%
  pull()
```

Filter for only years that have data available.

```{r}
db <- db |>
  filter(year %in% years_data)
```

The quality flags are currently inputed as numbers 1 through 3. Update the data so these are labeled as text: 1="Strong", 2="Marginal", 3="Weak".

```{r}
db <- db |>
  mutate(across(ends_with("quality"), ~ case_when(
    . == 1 ~ "Strong",
    . == 2 ~ "Marginal",
    . == 3 ~ "Weak"
  )))
```

## Quality and Completeness

### Dimensions

```{r}
db |>
  count(year) |>
  assert(
    within_bounds(485, 486),
    n
  )
```

### Data Quality Flags

This section summarizes data quality flags for variables and years.

```{r}
db |>
  select(ends_with("_quality")) |>
  pivot_longer(everything(), names_to = "variable", values_to = "quality") |>
  count(variable, quality) |>
  filter(!is.na(quality)) |>
  print(n = 100)

db |>
  select(year, ends_with("_quality")) |>
  pivot_longer(-year, names_to = "variable", values_to = "quality") |>
  count(year, quality) |>
  print(n = 100)
```

### Full Database

Evaluate the quality variables.

```{r}
db |>
  select(ends_with("_quality")) |>
  assert(in_set("Strong", "Marginal", "Weak"), everything())
```

### 01 Financial Well-Being

```{r}
db |>
  assert(
    within_bounds(0, Inf),
    pctl_income_20,
    pctl_income_50,
    pctl_income_80
  ) |>
  assert(
    within_bounds(0, Inf),
    share_debt_coll
  ) |>
  quiet()

db |>
  separate_wider_delim(
    ratio_black_nh_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db |>
  separate_wider_delim(
    ratio_black_nh_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db |>
  separate_wider_delim(
    ratio_hispanic_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db |>
  separate_wider_delim(
    ratio_other_nh_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()

db |>
  separate_wider_delim(
    ratio_white_nh_house_value_households,
    delim = ":",
    names = c("numerator", "denominator")
  ) |>
  mutate(
    numerator = as.numeric(numerator),
    denominator = as.numeric(denominator)
  ) |>
  assert(
    within_bounds(0, Inf),
    numerator,
    denominator
  ) |>
  quiet()
```

### 02 Housing

```{R}
db |>
  assert(
    within_bounds(0, Inf),
    count_homeless,
    count_homeless_lb,
    count_homeless_ub
  ) |>
  assert(
    within_bounds(0, 1),
    share_homeless
  ) |>
  assert(
    within_bounds(0, Inf),
    share_affordable_80_ami,
    share_affordable_50_ami,
    share_affordable_30_ami
  ) |>
  assert(
    within_bounds(0, Inf),
    share_affordable_available_80_ami,
    share_affordable_available_50_ami,
    share_affordable_available_30_ami
  ) |>
  quiet()

test_bounds(
  data = db,
  estimate = count_homeless,
  lb = count_homeless_lb,
  ub = count_homeless_ub
)
```

### 04 Health
There is no place data for this predictor.

### 05 Local Governance

```{r}
db |>
  assert(
    within_bounds(0, Inf),
    share_desc_rep_other,
    share_desc_rep_black_nonhispanic,
    share_desc_rep_hispanic,
    share_desc_rep_white_nonhispanic
  ) |>
  assert(
    within_bounds(0, 1),
    share_election_turnout
  ) |>
  quiet()
```

### 06 Neighborhoods

```{r}
db |>
  assert(
    within_bounds(0, Inf),
    share_black_nh_exposure,
    share_hispanic_exposure,
    share_other_nh_exposure,
    share_white_nh_exposure,
    share_poverty_exposure
  ) |>
  assert(
    within_bounds(0, 1),
    share_economic_connectedness,
    share_transportation_cost,
    share_transit_commuter
  ) |>
  assert(
    within_bounds(0, 10000),
    count_membership_associations_per_10k
  ) |>
  assert(
    within_bounds(0, 100),
    index_air_hazard
  ) |>
  quiet()
```

### 07 Safety

```{r}
 # RP: Needs to be updated
# db |>
#   assert(
#     within_bounds(0, Inf),
#     rate_crime_violent,
#     rate_crime_property,
#     rate_juv_arrest
#   ) |>
#   quiet()
```

### 08 Education

```{r}
 # RP: Commented out code needs to be updated
db |>
  assert(
    within_bounds(0, 1),
    share_in_preschool,
    share_in_preschool_lb,
    share_in_preschool_ub,
    # meps20_black,
    # meps20_hispanic,
    # meps20_white,
    share_hs_degree,
    share_hs_degree_lb,
    share_hs_degree_ub,
    share_digital_access
  ) |>
  # assert(
  #   within_bounds(-10, 10),
  #   rate_learning,
  #   rate_learning_lb,
  #   rate_learning_ub
  # ) |>
  quiet()

test_bounds(
  data = db,
  estimate = share_in_preschool,
  lb = share_in_preschool_lb,
  ub = share_in_preschool_ub
)

test_bounds(
  data = db,
  estimate = share_hs_degree,
  lb = share_hs_degree_lb,
  ub = share_hs_degree_ub
)

# test_bounds(
#   data = db,
#   estimate = rate_learning,
#   lb = rate_learning_lb,
#   ub = rate_learning_ub
# )
```

### 09 Employment

```{r}
db |>
  assert(
    within_bounds(0, 1),
    share_employed,
    share_employed_lb,
    share_employed_ub
  ) |>
  quiet()

test_bounds(
  data = db,
  estimate = share_employed,
  lb = share_employed_lb,
  ub = share_employed_ub
)
```

## Write the File

```{r}
write_csv(db, here("data", "61_mobility-metrics_place_longitudinal.csv"))
```

## Delete temp files

Delete the created temp files

```{r}
tempfiles <- c(
  # 01 financial well-being
  here("data", "temp", "place_debt_longitudinal.csv"),

  # 02 housing
  here("data", "temp", "homelessness_city_all.csv"),
  here("data", "temp", "housing_place_all.csv"),

  # 05 local-governance
  here("data", "temp", "voter-turnout-city.csv"),
  
  # 06 neighborhoods
  here("data", "temp", "race-ethnicity-exposure-city.csv"),
  here("data", "temp", "rates_crime_place_all.csv"),
  here("data", "temp", "rates_arrest_place_all.csv")
)

file.remove(tempfiles)
```
